{"version":3,"sources":["script.js","realbig-slider.js","foundation.core.js","foundation.util.keyboard.js","foundation.util.box.js","foundation.util.nest.js","foundation.util.mediaQuery.js","foundation.util.triggers.js","foundation.util.motion.js","foundation.dropdownMenu.js","foundation.offcanvas.js","foundation.reveal.js","foundation-init.js","slider-init.js","testimonials.js"],"names":["$","RealBigSlider","element","settings","_RealBigSlider","selector","className","replace","this","defaults","slideDuration","speed","arrowRight","arrowLeft","extend","initials","currSlide","$currSlide","totalSlides","csstransitions","$el","changeSlide","proxy","init","instanceUid","prototype","csstransitionsTest","build","events","activate","initTimer","elem","document","createElement","props","i","prop","result","undefined","style","addCSSDuration","_","find","each","removeCSSDuration","$indicators","length","append","eq","addClass","on","direction","clearTimer","timer","clearInterval","setInterval","startTimer","throttle","e","_direction","animate","_next","$nextSlide","_cssAnimation","_jsAnimation","data","index","currentTarget","setTimeout","bind","removeClass","_updateIndicators","animation","animationPrev","attr","fn","options","el","jQuery","_typeof","Symbol","iterator","obj","constructor","functionName","Function","name","funcNameRegex","results","exec","toString","trim","parseValue","str","test","isNaN","parseFloat","hyphenate","toLowerCase","FOUNDATION_VERSION","Foundation","version","_plugins","_uuids","rtl","plugin","attrName","registerPlugin","pluginName","uuid","GetYoDigits","$element","trigger","push","unregisterPlugin","splice","indexOf","removeAttr","removeData","reInit","plugins","isJQ","_init","type","_this","fns","object","plgs","forEach","p","foundation","string","Object","keys","err","console","error","namespace","Math","round","pow","random","slice","reflow","$elem","addBack","opts","warn","split","opt","map","er","getFnName","transitionend","end","transitions","transition","WebkitTransition","MozTransition","OTransition","t","triggerHandler","util","func","delay","context","args","arguments","apply","method","$meta","$noJS","appendTo","head","MediaQuery","TypeError","Array","call","plugClass","ReferenceError","window","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","navigator","userAgent","lastTime","callback","nextTime","max","clearTimeout","performance","start","oThis","aArgs","fToBind","fNOP","fBound","concat","Keyboard","keyCodes","9","13","27","32","37","38","39","40","kcs","k","kc","parseKey","event","key","which","keyCode","String","fromCharCode","toUpperCase","shiftKey","ctrlKey","altKey","commands","handleKey","component","functions","cmds","command","commandList","ltr","handled","unhandled","findFocusable","filter","is","register","componentName","ImNotTouchingYou","parent","lrOnly","tbOnly","top","bottom","left","right","eleDims","GetDimensions","parDims","offset","height","width","windowDims","allDirs","Error","rect","getBoundingClientRect","parRect","parentNode","winRect","body","winY","pageYOffset","winX","pageXOffset","parentDims","GetOffsets","anchor","position","vOffset","hOffset","isOverflow","$eleDims","$anchorDims","Box","Nest","Feather","menu","items","role","subMenuClass","subItemClass","hasSubClass","$item","$sub","children","aria-haspopup","aria-expanded","aria-label","text","data-submenu","aria-hidden","Burn","css","parseStyleToObject","styleObject","reduce","ret","param","parts","val","decodeURIComponent","hasOwnProperty","isArray","queries","current","atLeast","size","query","get","matchMedia","matches","value","namedQueries","self","extractedStyles","_getCurrentSize","_watcher","matched","newSize","styleMedia","media","script","getElementsByTagName","info","id","insertBefore","getComputedStyle","currentStyle","matchMedium","styleSheet","cssText","textContent","stopPropagation","Motion","animateOut","fadeOut","MutationObserver","prefixes","checkListeners","eventsListener","resizeListener","scrollListener","closemeListener","load","yetiBoxes","plugNames","listeners","join","off","pluginId","not","debounce","$nodes","nodes","querySelectorAll","listeningElementsMutation","mutationRecordsList","$target","target","elementObserver","observe","attributes","childList","characterData","subtree","attributeFilter","IHearYou","isIn","cb","finish","hide","reset","transitionDuration","initClass","activeClass","initClasses","activeClasses","show","offsetWidth","one","animateIn","Move","duration","move","ts","prog","anim","DropdownMenu","ENTER","SPACE","ARROW_RIGHT","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ESCAPE","disableHover","autoclose","hoverDelay","clickOpen","closingTime","alignment","closeOnClick","verticalClass","rightClass","forceFollow","subs","$menuItems","$tabs","isVert","hasClass","changed","_events","hasTouch","ontouchstart","parClass","parentsUntil","hasSub","hasClicked","stopImmediatePropagation","preventDefault","_hide","_show","add","$prevElement","$nextElement","isTab","$elements","siblings","nextSibling","focus","prevSibling","openSub","closeSub","close","open","vertical","down","up","next","previous","_addBodyHandler","$body","$link","idx","$sibs","clear","oldClass","$parentLi","$toClose","somethingToClose","data-is-click","destroy","OffCanvas","$lastTrigger","transitionTime","forceTop","isRevealed","revealOn","autoFocus","revealClass","trapFocus","$exiter","exiter","setAttribute","RegExp","match","_setMQChecker","open.zf.trigger","close.zf.trigger","toggle.zf.trigger","toggle","keydown.zf.offcanvas","_handleKeyboard","click.zf.offcanvas","reveal","$closer","scrollTop","_trapFocus","focusable","first","last","keycode","Reveal","TAB","SHIFT_TAB","animationIn","animationOut","showDelay","hideDelay","closeOnEsc","multipleOpened","fullScreen","btmOffsetPct","overlay","resetOnClose","deepLink","isActive","$anchor","anchorId","aria-controls","tabindex","aria-labelledby","$overlay","_makeOverlay","data-yeti-box","data-resize","location","hash","data-close","resizeme.zf.trigger","_setPosition","_handleState","elePos","max-height","changedSize","history","pushState","visibility","focusableElements","_extraHandlers","contains","tab_forward","tab_backward","finishUp","html","replaceState","title","pathname","remove","module","exports","define","ready","ajax","url","wasentha_theme_data","ajaxUrl","testimonial_category","action","success","response","parseJSON","floor"],"mappings":"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","file":"script.js","sourcesContent":["'use strict';\n\n;(function ($) {\n\n    /*\n    * We define RealBigSlider as a variable of type ‘function’.\n    * Here, we use an anonymous function to ensure\n    * that the logic inside the function is executed immediately.\n    *\n    */\n    var RealBigSlider = function (element, settings) {\n\n        var instanceUid = 0;\n\n        /*\n        * The constructor function for RealBigSlider\n        *\n        */\n        function _RealBigSlider(element, settings) {\n\n            // Ensures the element selectors are as specific to the slider itself as possible.\n            var selector = '.' + element.className.replace(/\\s/g, '.');\n\n            this.defaults = {\n                slideDuration: '3000',\n                speed: 500,\n                arrowRight: selector + ' .arrow-right',\n                arrowLeft: selector + ' .arrow-left'\n            };\n\n            // We create a new property to hold our default settings after they\n            // have been merged with user supplied settings\n            this.settings = $.extend({}, this, this.defaults, settings);\n\n            // This object holds values that will change as the plugin operates\n            this.initials = {\n                currSlide: 0,\n                $currSlide: null,\n                totalSlides: false,\n                csstransitions: false\n            };\n\n            // Attaches the properties of this.initials as direct properties of RealBigSlider\n            $.extend(this, this.initials);\n\n            // Here we'll hold a reference to the DOM element passed in\n            // by the $.each function when this plugin was instantiated\n            this.$el = $(element);\n\n            // Ensure that the value of 'this' always references RealBigSlider\n            this.changeSlide = $.proxy(this.changeSlide, this);\n\n            // We'll call our initiator function to get things rolling!\n            this.init();\n\n            // A little bit of metadata about the instantiated object\n            // This property will be incremented everytime a new RealBigSlider slider is created\n            // It provides each slider with a unique ID\n            this.instanceUid = instanceUid++;\n        }\n\n        return _RealBigSlider;\n    }();\n\n    /**\n     * Called once per instance\n     * Calls starter methods and associate the '.realbig-slider' class\n     * @params void\n     * @returns void\n     *\n     */\n    RealBigSlider.prototype.init = function () {\n        //Test to see if cssanimations are available\n        this.csstransitionsTest();\n        // Add a class so we can style our slider\n        // Build out any DOM elements needed for the plugin to run\n        // Eg, we'll create an indicator dot for every slide in the slider\n        this.build();\n        // Eg. Let the user click next/prev arrows or indicator dots\n        this.events();\n        // Bind any events we'll need for the slider to function\n        this.activate();\n        // Start the timer loop to control progression to the next slide\n        this.initTimer();\n    };\n\n    /**\n    * Appropriated out of Modernizr v2.8.3\n    * Creates a new DOM element and tests existence of properties on it's\n    * Style object to see if CSSTransitions are available\n    * @params void\n    * @returns void\n    *\n    */\n    RealBigSlider.prototype.csstransitionsTest = function () {\n        var elem = document.createElement('modernizr');\n        //A list of properties to test for\n        var props = [\"transition\", \"WebkitTransition\", \"MozTransition\", \"OTransition\", \"msTransition\"];\n        //Iterate through our new element's Style property to see if these properties exist\n        for (var i in props) {\n            var prop = props[i];\n            var result = elem.style[prop] !== undefined ? prop : false;\n            if (result) {\n                this.csstransitions = result;\n                break;\n            }\n        }\n    };\n\n    /**\n    * Add the CSSTransition duration to the DOM Object's Style property\n    * We trigger this function just before we want the slides to animate\n    * @params void\n    * @returns void\n    *\n    */\n    RealBigSlider.prototype.addCSSDuration = function () {\n        var _ = this;\n        this.$el.find('.slide').each(function () {\n            this.style[_.csstransitions + 'Duration'] = _.settings.speed + 'ms';\n        });\n    };\n\n    /**\n    * Remove the CSSTransition duration from the DOM Object's style property\n    * We trigger this function just after the slides have animated\n    * @params void\n    * @returns void\n    *\n    */\n    RealBigSlider.prototype.removeCSSDuration = function () {\n        var _ = this;\n        this.$el.find('.slide').each(function () {\n            this.style[_.csstransitions + 'Duration'] = '';\n        });\n    };\n\n    /**\n    * Creates a list of indicators based on the amount of slides\n    * @params void\n    * @returns void\n    *\n    */\n    RealBigSlider.prototype.build = function () {\n        var $indicators = this.$el.find('.indicators');\n        this.totalSlides = this.$el.find('.slide').length;\n        for (var i = 0; i < this.totalSlides; i++) {\n            $indicators.append('<li data-index=' + i + '>');\n        }\n    };\n\n    /**\n    * Activates the first slide\n    * Activates the first indicator\n    * @params void\n    * @returns void\n    *\n    */\n    RealBigSlider.prototype.activate = function () {\n        this.$currSlide = this.$el.find('.slide').eq(0);\n        this.$el.find('.indicators li').eq(0).addClass('active');\n    };\n\n    /**\n    * Associate event handlers to events\n    * For arrow events, we send the placement of the next slide to the handler\n    * @params void\n    * @returns void\n    *\n    */\n    RealBigSlider.prototype.events = function () {\n        $('body').on('click', this.settings.arrowRight, { direction: 'right' }, this.changeSlide).on('click', this.settings.arrowLeft, { direction: 'left' }, this.changeSlide).on('click', '.indicators li', this.changeSlide);\n    };\n\n    /**\n    * TIMER\n    * Resets the timer\n    * @params void\n    * @returns void\n    *\n    */\n    RealBigSlider.prototype.clearTimer = function () {\n        if (this.timer) clearInterval(this.timer);\n    };\n\n    /**\n    * TIMER\n    * Initialise the timer\n    * @params void\n    * @returns void\n    *\n    */\n    RealBigSlider.prototype.initTimer = function () {\n        this.timer = setInterval(this.changeSlide, this.settings.slideDuration);\n    };\n\n    /**\n    * TIMER\n    * Start the timer\n    * Reset the throttle to allow changeSlide to be executable\n    * @params void\n    * @returns void\n    *\n    */\n    RealBigSlider.prototype.startTimer = function () {\n        this.initTimer();\n        this.throttle = false;\n    };\n\n    /**\n    * MAIN LOGIC HANDLER\n    * Triggers a set of subfunctions to carry out the animation\n    * @params\tobject\tevent\n    * @returns void\n    *\n    */\n    RealBigSlider.prototype.changeSlide = function (e) {\n        //Ensure that animations are triggered one at a time\n        if (this.throttle) return;\n        this.throttle = true;\n\n        //Stop the timer as the animation is getting carried out\n        this.clearTimer();\n\n        // Returns the animation direction ( left or right )\n        var direction = this._direction(e);\n\n        // Selects the next slide\n        var animate = this._next(e, direction);\n        if (!animate) return;\n\n        //Active the next slide to scroll into view\n        var $nextSlide = this.$el.find('.slide').eq(this.currSlide).addClass(direction + ' active');\n\n        if (!this.csstransitions) {\n            this._jsAnimation($nextSlide, direction);\n        } else {\n            this._cssAnimation($nextSlide, direction);\n        }\n    };\n\n    /**\n    * Returns the animation direction, right or left\n    * @params\tobject\tevent\n    * @returns strong\tanimation direction\n    *\n    */\n    RealBigSlider.prototype._direction = function (e) {\n        var direction;\n\n        // Default to forward movement\n        if (typeof e !== 'undefined') {\n            direction = typeof e.data === 'undefined' ? 'right' : e.data.direction;\n        } else {\n            direction = 'right';\n        }\n        return direction;\n    };\n\n    /**\n    * Updates our plugin with the next slide number\n    * @params\tobject\tevent\n    * @params\tstring\tanimation direction\n    * @returns boolean continue to animate?\n    *\n    */\n    RealBigSlider.prototype._next = function (e, direction) {\n\n        // If the event was triggered by a slide indicator, we store the data-index value of that indicator\n        var index = typeof e !== 'undefined' ? $(e.currentTarget).data('index') : undefined;\n\n        //Logic for determining the next slide\n        switch (true) {\n            //If the event was triggered by an indicator, we set the next slide based on index\n            case typeof index !== 'undefined':\n                if (this.currSlide == index) {\n                    this.startTimer();\n                    return false;\n                }\n                this.currSlide = index;\n                break;\n            case direction == 'right' && this.currSlide < this.totalSlides - 1:\n                this.currSlide++;\n                break;\n            case direction == 'right':\n                this.currSlide = 0;\n                break;\n            case direction == 'left' && this.currSlide === 0:\n                this.currSlide = this.totalSlides - 1;\n                break;\n            case direction == 'left':\n                this.currSlide--;\n                break;\n        }\n        return true;\n    };\n\n    /**\n    * Executes the animation via CSS transitions\n    * @params\tobject\tJquery object the next slide to slide into view\n    * @params\tstring\tanimation direction\n    * @returns void\n    *\n    */\n    RealBigSlider.prototype._cssAnimation = function ($nextSlide, direction) {\n        //Init CSS transitions\n        setTimeout(function () {\n            this.$el.addClass('transition');\n            this.addCSSDuration();\n            this.$currSlide.addClass('shift-' + direction);\n        }.bind(this), 100);\n\n        //CSS Animation Callback\n        //After the animation has played out, remove CSS transitions\n        //Remove unnecessary classes\n        //Start timer\n        setTimeout(function () {\n            this.$el.removeClass('transition');\n            this.removeCSSDuration();\n            this.$currSlide.removeClass('active shift-left shift-right');\n            this.$currSlide = $nextSlide.removeClass(direction);\n            this._updateIndicators();\n            this.startTimer();\n        }.bind(this), 100 + this.settings.speed);\n    };\n\n    /**\n    * Executes the animation via JS transitions\n    * @params\tobject\tJquery object the next slide to slide into view\n    * @params\tstring\tanimation direction\n    * @returns void\n    *\n    */\n    RealBigSlider.prototype._jsAnimation = function ($nextSlide, direction) {\n        //Cache this reference for use inside animate functions\n        var _ = this;\n\n        // See CSS for explanation of .js-reset-left\n        if (direction == 'right') _.$currSlide.addClass('js-reset-left');\n\n        var animation = {};\n        animation[direction] = '0%';\n\n        var animationPrev = {};\n        animationPrev[direction] = '100%';\n\n        //Animation: Current slide\n        this.$currSlide.animate(animationPrev, this.settings.speed);\n\n        //Animation: Next slide\n        $nextSlide.animate(animation, this.settings.speed, 'swing', function () {\n            //Get rid of any JS animation residue\n            _.$currSlide.removeClass('active js-reset-left').attr('style', '');\n            //Cache the next slide after classes and inline styles have been removed\n            _.$currSlide = $nextSlide.removeClass(direction).attr('style', '');\n            _._updateIndicators();\n            _.startTimer();\n        });\n    };\n\n    /**\n    * Ensures the slide indicators are pointing to the currently active slide\n    * @params\tvoid\n    * @returns\tvoid\n    *\n    */\n    RealBigSlider.prototype._updateIndicators = function () {\n        this.$el.find('.indicators li').removeClass('active').eq(this.currSlide).addClass('active');\n    };\n\n    /**\n    * Initialize the plugin once for each DOM object passed to jQuery\n    * @params\tobject\toptions object\n    * @returns void\n    *\n    */\n    $.fn.RealBigSlider = function (options) {\n\n        return this.each(function (index, el) {\n\n            el.RealBigSlider = new RealBigSlider(el, options);\n        });\n    };\n})(jQuery);\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n!function ($) {\n  \"use strict\";\n\n  var FOUNDATION_VERSION = '6.1.2';\n\n  // Global Foundation object\n  // This is attached to the window, or used as a module for AMD/Browserify\n  var Foundation = {\n    version: FOUNDATION_VERSION,\n\n    /**\n     * Stores initialized plugins.\n     */\n    _plugins: {},\n\n    /**\n     * Stores generated unique ids for plugin instances\n     */\n    _uuids: [],\n\n    /**\n     * Returns a boolean for RTL support\n     */\n    rtl: function rtl() {\n      return $('html').attr('dir') === 'rtl';\n    },\n    /**\n     * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n     * @param {Object} plugin - The constructor of the plugin.\n     */\n    plugin: function plugin(_plugin, name) {\n      // Object key to use when adding to global Foundation object\n      // Examples: Foundation.Reveal, Foundation.OffCanvas\n      var className = name || functionName(_plugin);\n      // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n      // Examples: data-reveal, data-off-canvas\n      var attrName = hyphenate(className);\n\n      // Add to the Foundation object and the plugins list (for reflowing)\n      this._plugins[attrName] = this[className] = _plugin;\n    },\n    /**\n     * @function\n     * Populates the _uuids array with pointers to each individual plugin instance.\n     * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n     * Also fires the initialization event for each plugin, consolidating repeditive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @param {String} name - the name of the plugin, passed as a camelCased string.\n     * @fires Plugin#init\n     */\n    registerPlugin: function registerPlugin(plugin, name) {\n      var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n      plugin.uuid = this.GetYoDigits(6, pluginName);\n\n      if (!plugin.$element.attr('data-' + pluginName)) {\n        plugin.$element.attr('data-' + pluginName, plugin.uuid);\n      }\n      if (!plugin.$element.data('zfPlugin')) {\n        plugin.$element.data('zfPlugin', plugin);\n      }\n      /**\n       * Fires when the plugin has initialized.\n       * @event Plugin#init\n       */\n      plugin.$element.trigger('init.zf.' + pluginName);\n\n      this._uuids.push(plugin.uuid);\n\n      return;\n    },\n    /**\n     * @function\n     * Removes the plugins uuid from the _uuids array.\n     * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n     * Also fires the destroyed event for the plugin, consolidating repeditive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @fires Plugin#destroyed\n     */\n    unregisterPlugin: function unregisterPlugin(plugin) {\n      var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n      this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n      plugin.$element.removeAttr('data-' + pluginName).removeData('zfPlugin')\n      /**\n       * Fires when the plugin has been destroyed.\n       * @event Plugin#destroyed\n       */\n      .trigger('destroyed.zf.' + pluginName);\n      for (var prop in plugin) {\n        plugin[prop] = null; //clean up script to prep for garbage collection.\n      }\n      return;\n    },\n\n    /**\n     * @function\n     * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n     * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n     * @default If no argument is passed, reflow all currently active plugins.\n     */\n    reInit: function reInit(plugins) {\n      var isJQ = plugins instanceof $;\n      try {\n        if (isJQ) {\n          plugins.each(function () {\n            $(this).data('zfPlugin')._init();\n          });\n        } else {\n          var type = typeof plugins === 'undefined' ? 'undefined' : _typeof(plugins),\n              _this = this,\n              fns = {\n            'object': function object(plgs) {\n              plgs.forEach(function (p) {\n                $('[data-' + p + ']').foundation('_init');\n              });\n            },\n            'string': function string() {\n              $('[data-' + plugins + ']').foundation('_init');\n            },\n            'undefined': function undefined() {\n              this['object'](Object.keys(_this._plugins));\n            }\n          };\n          fns[type](plugins);\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        return plugins;\n      }\n    },\n\n    /**\n     * returns a random base-36 uid with namespacing\n     * @function\n     * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n     * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n     * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n     * @returns {String} - unique id\n     */\n    GetYoDigits: function GetYoDigits(length, namespace) {\n      length = length || 6;\n      return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1) + (namespace ? '-' + namespace : '');\n    },\n    /**\n     * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n     * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n     * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n     */\n    reflow: function reflow(elem, plugins) {\n\n      // If plugins is undefined, just grab everything\n      if (typeof plugins === 'undefined') {\n        plugins = Object.keys(this._plugins);\n      }\n      // If plugins is a string, convert it to an array with one item\n      else if (typeof plugins === 'string') {\n          plugins = [plugins];\n        }\n\n      var _this = this;\n\n      // Iterate through each plugin\n      $.each(plugins, function (i, name) {\n        // Get the current plugin\n        var plugin = _this._plugins[name];\n\n        // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n        var $elem = $(elem).find('[data-' + name + ']').addBack('[data-' + name + ']');\n\n        // For each plugin found, initialize it\n        $elem.each(function () {\n          var $el = $(this),\n              opts = {};\n          // Don't double-dip on plugins\n          if ($el.data('zfPlugin')) {\n            console.warn(\"Tried to initialize \" + name + \" on an element that already has a Foundation plugin.\");\n            return;\n          }\n\n          if ($el.attr('data-options')) {\n            var thing = $el.attr('data-options').split(';').forEach(function (e, i) {\n              var opt = e.split(':').map(function (el) {\n                return el.trim();\n              });\n              if (opt[0]) opts[opt[0]] = parseValue(opt[1]);\n            });\n          }\n          try {\n            $el.data('zfPlugin', new plugin($(this), opts));\n          } catch (er) {\n            console.error(er);\n          } finally {\n            return;\n          }\n        });\n      });\n    },\n    getFnName: functionName,\n    transitionend: function transitionend($elem) {\n      var transitions = {\n        'transition': 'transitionend',\n        'WebkitTransition': 'webkitTransitionEnd',\n        'MozTransition': 'transitionend',\n        'OTransition': 'otransitionend'\n      };\n      var elem = document.createElement('div'),\n          end;\n\n      for (var t in transitions) {\n        if (typeof elem.style[t] !== 'undefined') {\n          end = transitions[t];\n        }\n      }\n      if (end) {\n        return end;\n      } else {\n        end = setTimeout(function () {\n          $elem.triggerHandler('transitionend', [$elem]);\n        }, 1);\n        return 'transitionend';\n      }\n    }\n  };\n\n  Foundation.util = {\n    /**\n     * Function for applying a debounce effect to a function call.\n     * @function\n     * @param {Function} func - Function to be called at end of timeout.\n     * @param {Number} delay - Time in ms to delay the call of `func`.\n     * @returns function\n     */\n    throttle: function throttle(func, delay) {\n      var timer = null;\n\n      return function () {\n        var context = this,\n            args = arguments;\n\n        if (timer === null) {\n          timer = setTimeout(function () {\n            func.apply(context, args);\n            timer = null;\n          }, delay);\n        }\n      };\n    }\n  };\n\n  // TODO: consider not making this a jQuery function\n  // TODO: need way to reflow vs. re-initialize\n  /**\n   * The Foundation jQuery method.\n   * @param {String|Array} method - An action to perform on the current jQuery object.\n   */\n  var foundation = function foundation(method) {\n    var type = typeof method === 'undefined' ? 'undefined' : _typeof(method),\n        $meta = $('meta.foundation-mq'),\n        $noJS = $('.no-js');\n\n    if (!$meta.length) {\n      $('<meta class=\"foundation-mq\">').appendTo(document.head);\n    }\n    if ($noJS.length) {\n      $noJS.removeClass('no-js');\n    }\n\n    if (type === 'undefined') {\n      //needs to initialize the Foundation object, or an individual plugin.\n      Foundation.MediaQuery._init();\n      Foundation.reflow(this);\n    } else if (type === 'string') {\n      //an individual method to invoke on a plugin or group of plugins\n      var args = Array.prototype.slice.call(arguments, 1); //collect all the arguments, if necessary\n      var plugClass = this.data('zfPlugin'); //determine the class of plugin\n\n      if (plugClass !== undefined && plugClass[method] !== undefined) {\n        //make sure both the class and method exist\n        if (this.length === 1) {\n          //if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n        } else {\n          this.each(function (i, el) {\n            //otherwise loop through the jQuery collection and invoke the method on each\n            plugClass[method].apply($(el).data('zfPlugin'), args);\n          });\n        }\n      } else {\n        //error for no class or no method\n        throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n      }\n    } else {\n      //error for invalid argument type\n      throw new TypeError(\"We're sorry, '\" + type + \"' is not a valid parameter. You must use a string representing the method you wish to invoke.\");\n    }\n    return this;\n  };\n\n  window.Foundation = Foundation;\n  $.fn.foundation = foundation;\n\n  // Polyfill for requestAnimationFrame\n  (function () {\n    if (!Date.now || !window.Date.now) window.Date.now = Date.now = function () {\n      return new Date().getTime();\n    };\n\n    var vendors = ['webkit', 'moz'];\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    }\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n      var lastTime = 0;\n      window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n          callback(lastTime = nextTime);\n        }, nextTime - now);\n      };\n      window.cancelAnimationFrame = clearTimeout;\n    }\n    /**\n     * Polyfill for performance.now, required by rAF\n     */\n    if (!window.performance || !window.performance.now) {\n      window.performance = {\n        start: Date.now(),\n        now: function now() {\n          return Date.now() - this.start;\n        }\n      };\n    }\n  })();\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== 'function') {\n        // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function fNOP() {},\n          fBound = function fBound() {\n        return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      if (this.prototype) {\n        // native functions don't have a prototype\n        fNOP.prototype = this.prototype;\n      }\n      fBound.prototype = new fNOP();\n\n      return fBound;\n    };\n  }\n  // Polyfill to get the name of a function in IE9\n  function functionName(fn) {\n    if (Function.prototype.name === undefined) {\n      var funcNameRegex = /function\\s([^(]{1,})\\(/;\n      var results = funcNameRegex.exec(fn.toString());\n      return results && results.length > 1 ? results[1].trim() : \"\";\n    } else if (fn.prototype === undefined) {\n      return fn.constructor.name;\n    } else {\n      return fn.prototype.constructor.name;\n    }\n  }\n  function parseValue(str) {\n    if (/true/.test(str)) return true;else if (/false/.test(str)) return false;else if (!isNaN(str * 1)) return parseFloat(str);\n    return str;\n  }\n  // Convert PascalCase to kebab-case\n  // Thank you: http://stackoverflow.com/a/8955580\n  function hyphenate(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n}(jQuery);\n'use strict';\n\n/*******************************************\n *                                         *\n * This util was created by Marius Olbertz *\n * Please thank Marius on GitHub /owlbertz *\n * or the web http://www.mariusolbertz.de/ *\n *                                         *\n ******************************************/\n!function ($, Foundation) {\n  'use strict';\n\n  Foundation.Keyboard = {};\n\n  var keyCodes = {\n    9: 'TAB',\n    13: 'ENTER',\n    27: 'ESCAPE',\n    32: 'SPACE',\n    37: 'ARROW_LEFT',\n    38: 'ARROW_UP',\n    39: 'ARROW_RIGHT',\n    40: 'ARROW_DOWN'\n  };\n\n  /*\n   * Constants for easier comparing.\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n   */\n  var keys = function (kcs) {\n    var k = {};\n    for (var kc in kcs) {\n      k[kcs[kc]] = kcs[kc];\n    }return k;\n  }(keyCodes);\n\n  Foundation.Keyboard.keys = keys;\n\n  /**\n   * Parses the (keyboard) event and returns a String that represents its key\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n   * @param {Event} event - the event generated by the event handler\n   * @return String key - String that represents the key pressed\n   */\n  var parseKey = function parseKey(event) {\n    var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\n    if (event.shiftKey) key = 'SHIFT_' + key;\n    if (event.ctrlKey) key = 'CTRL_' + key;\n    if (event.altKey) key = 'ALT_' + key;\n    return key;\n  };\n  Foundation.Keyboard.parseKey = parseKey;\n\n  // plain commands per component go here, ltr and rtl are merged based on orientation\n  var commands = {};\n\n  /**\n   * Handles the given (keyboard) event\n   * @param {Event} event - the event generated by the event handler\n   * @param {String} component - Foundation component's name, e.g. Slider or Reveal\n   * @param {Objects} functions - collection of functions that are to be executed\n   */\n  var handleKey = function handleKey(event, component, functions) {\n    var commandList = commands[component],\n        keyCode = parseKey(event),\n        cmds,\n        command,\n        fn;\n    if (!commandList) return console.warn('Component not defined!');\n\n    if (typeof commandList.ltr === 'undefined') {\n      // this component does not differentiate between ltr and rtl\n      cmds = commandList; // use plain list\n    } else {\n      // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\n      if (Foundation.rtl()) cmds = $.extend({}, commandList.ltr, commandList.rtl);else cmds = $.extend({}, commandList.rtl, commandList.ltr);\n    }\n    command = cmds[keyCode];\n\n    fn = functions[command];\n    if (fn && typeof fn === 'function') {\n      // execute function  if exists\n      fn.apply();\n      if (functions.handled || typeof functions.handled === 'function') {\n        // execute function when event was handled\n        functions.handled.apply();\n      }\n    } else {\n      if (functions.unhandled || typeof functions.unhandled === 'function') {\n        // execute function when event was not handled\n        functions.unhandled.apply();\n      }\n    }\n  };\n  Foundation.Keyboard.handleKey = handleKey;\n\n  /**\n   * Finds all focusable elements within the given `$element`\n   * @param {jQuery} $element - jQuery object to search within\n   * @return {jQuery} $focusable - all focusable elements within `$element`\n   */\n  var findFocusable = function findFocusable($element) {\n    return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function () {\n      if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) {\n        return false;\n      } //only have visible elements and those that have a tabindex greater or equal 0\n      return true;\n    });\n  };\n  Foundation.Keyboard.findFocusable = findFocusable;\n\n  /**\n   * Returns the component name name\n   * @param {Object} component - Foundation component, e.g. Slider or Reveal\n   * @return String componentName\n   */\n\n  var register = function register(componentName, cmds) {\n    commands[componentName] = cmds;\n  };\n  Foundation.Keyboard.register = register;\n}(jQuery, window.Foundation);\n'use strict';\n\n!function (Foundation, window) {\n  /**\n   * Compares the dimensions of an element to a container and determines collision events with container.\n   * @function\n   * @param {jQuery} element - jQuery object to test for collisions.\n   * @param {jQuery} parent - jQuery object to use as bounding container.\n   * @param {Boolean} lrOnly - set to true to check left and right values only.\n   * @param {Boolean} tbOnly - set to true to check top and bottom values only.\n   * @default if no parent object passed, detects collisions with `window`.\n   * @returns {Boolean} - true if collision free, false if a collision in any direction.\n   */\n  var ImNotTouchingYou = function ImNotTouchingYou(element, parent, lrOnly, tbOnly) {\n    var eleDims = GetDimensions(element),\n        top,\n        bottom,\n        left,\n        right;\n\n    if (parent) {\n      var parDims = GetDimensions(parent);\n\n      bottom = eleDims.offset.top + eleDims.height <= parDims.height + parDims.offset.top;\n      top = eleDims.offset.top >= parDims.offset.top;\n      left = eleDims.offset.left >= parDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= parDims.width;\n    } else {\n      bottom = eleDims.offset.top + eleDims.height <= eleDims.windowDims.height + eleDims.windowDims.offset.top;\n      top = eleDims.offset.top >= eleDims.windowDims.offset.top;\n      left = eleDims.offset.left >= eleDims.windowDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= eleDims.windowDims.width;\n    }\n    var allDirs = [bottom, top, left, right];\n\n    if (lrOnly) {\n      return left === right === true;\n    }\n    if (tbOnly) {\n      return top === bottom === true;\n    }\n\n    return allDirs.indexOf(false) === -1;\n  };\n\n  /**\n   * Uses native methods to return an object of dimension values.\n   * @function\n   * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\n   * @returns {Object} - nested object of integer pixel values\n   * TODO - if element is window, return only those values.\n   */\n  var GetDimensions = function GetDimensions(elem, test) {\n    elem = elem.length ? elem[0] : elem;\n\n    if (elem === window || elem === document) {\n      throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");\n    }\n\n    var rect = elem.getBoundingClientRect(),\n        parRect = elem.parentNode.getBoundingClientRect(),\n        winRect = document.body.getBoundingClientRect(),\n        winY = window.pageYOffset,\n        winX = window.pageXOffset;\n\n    return {\n      width: rect.width,\n      height: rect.height,\n      offset: {\n        top: rect.top + winY,\n        left: rect.left + winX\n      },\n      parentDims: {\n        width: parRect.width,\n        height: parRect.height,\n        offset: {\n          top: parRect.top + winY,\n          left: parRect.left + winX\n        }\n      },\n      windowDims: {\n        width: winRect.width,\n        height: winRect.height,\n        offset: {\n          top: winY,\n          left: winX\n        }\n      }\n    };\n  };\n  /**\n   * Returns an object of top and left integer pixel values for dynamically rendered elements,\n   * such as: Tooltip, Reveal, and Dropdown\n   * @function\n   * @param {jQuery} element - jQuery object for the element being positioned.\n   * @param {jQuery} anchor - jQuery object for the element's anchor point.\n   * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\n   * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\n   * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\n   * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\n   * TODO alter/rewrite to work with `em` values as well/instead of pixels\n   */\n  var GetOffsets = function GetOffsets(element, anchor, position, vOffset, hOffset, isOverflow) {\n    var $eleDims = GetDimensions(element),\n\n    // var $eleDims = GetDimensions(element),\n    $anchorDims = anchor ? GetDimensions(anchor) : null;\n    // $anchorDims = anchor ? GetDimensions(anchor) : null;\n    switch (position) {\n      case 'top':\n        return {\n          left: $anchorDims.offset.left,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset,\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'center top':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'center bottom':\n        return {\n          left: isOverflow ? hOffset : $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n        break;\n      case 'center left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset + 1,\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center':\n        return {\n          left: $eleDims.windowDims.offset.left + $eleDims.windowDims.width / 2 - $eleDims.width / 2,\n          top: $eleDims.windowDims.offset.top + $eleDims.windowDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'reveal':\n        return {\n          left: ($eleDims.windowDims.width - $eleDims.width) / 2,\n          top: $eleDims.windowDims.offset.top + vOffset\n        };\n      case 'reveal full':\n        return {\n          left: $eleDims.windowDims.offset.left,\n          top: $eleDims.windowDims.offset.top\n        };\n        break;\n      default:\n        return {\n          left: $anchorDims.offset.left,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n    }\n  };\n  Foundation.Box = {\n    ImNotTouchingYou: ImNotTouchingYou,\n    GetDimensions: GetDimensions,\n    GetOffsets: GetOffsets\n  };\n}(window.Foundation, window);\n'use strict';\n\n!function ($, Foundation) {\n  'use strict';\n\n  Foundation.Nest = {\n    Feather: function Feather(menu, type) {\n      menu.attr('role', 'menubar');\n      type = type || 'zf';\n      var items = menu.find('li').attr({ 'role': 'menuitem' }),\n          subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n      menu.find('a:first').attr('tabindex', 0);\n      items.each(function () {\n        var $item = $(this),\n            $sub = $item.children('ul');\n        if ($sub.length) {\n          $item.addClass(hasSubClass).attr({\n            'aria-haspopup': true,\n            'aria-expanded': false,\n            'aria-label': $item.children('a:first').text()\n          });\n          $sub.addClass('submenu ' + subMenuClass).attr({\n            'data-submenu': '',\n            'aria-hidden': true,\n            'role': 'menu'\n          });\n        }\n        if ($item.parent('[data-submenu]').length) {\n          $item.addClass('is-submenu-item ' + subItemClass);\n        }\n      });\n      return;\n    },\n    Burn: function Burn(menu, type) {\n      var items = menu.find('li').removeAttr('tabindex'),\n          subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      // menu.find('.is-active').removeClass('is-active');\n      menu.find('*')\n      // menu.find('.' + subMenuClass + ', .' + subItemClass + ', .is-active, .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\n      .removeClass(subMenuClass + ' ' + subItemClass + ' ' + hasSubClass + ' is-submenu-item submenu is-active').removeAttr('data-submenu').css('display', '');\n\n      // console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\n      //           .removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')\n      //           .removeAttr('data-submenu'));\n      // items.each(function(){\n      //   var $item = $(this),\n      //       $sub = $item.children('ul');\n      //   if($item.parent('[data-submenu]').length){\n      //     $item.removeClass('is-submenu-item ' + subItemClass);\n      //   }\n      //   if($sub.length){\n      //     $item.removeClass('has-submenu');\n      //     $sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');\n      //   }\n      // });\n    }\n  };\n}(jQuery, window.Foundation);\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n!function ($, Foundation) {\n\n  // Default set of media queries\n  var defaultQueries = {\n    'default': 'only screen',\n    landscape: 'only screen and (orientation: landscape)',\n    portrait: 'only screen and (orientation: portrait)',\n    retina: 'only screen and (-webkit-min-device-pixel-ratio: 2),' + 'only screen and (min--moz-device-pixel-ratio: 2),' + 'only screen and (-o-min-device-pixel-ratio: 2/1),' + 'only screen and (min-device-pixel-ratio: 2),' + 'only screen and (min-resolution: 192dpi),' + 'only screen and (min-resolution: 2dppx)'\n  };\n\n  var MediaQuery = {\n    queries: [],\n    current: '',\n\n    /**\n     * Checks if the screen is at least as wide as a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to check.\n     * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\n     */\n    atLeast: function atLeast(size) {\n      var query = this.get(size);\n\n      if (query) {\n        return window.matchMedia(query).matches;\n      }\n\n      return false;\n    },\n\n    /**\n     * Gets the media query of a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to get.\n     * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\n     */\n    get: function get(size) {\n      for (var i in this.queries) {\n        var query = this.queries[i];\n        if (size === query.name) return query.value;\n      }\n\n      return null;\n    },\n\n    /**\n     * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\n     * @function\n     * @private\n     */\n    _init: function _init() {\n      var self = this;\n      var extractedStyles = $('.foundation-mq').css('font-family');\n      var namedQueries;\n\n      namedQueries = parseStyleToObject(extractedStyles);\n\n      for (var key in namedQueries) {\n        self.queries.push({\n          name: key,\n          value: 'only screen and (min-width: ' + namedQueries[key] + ')'\n        });\n      }\n\n      this.current = this._getCurrentSize();\n\n      this._watcher();\n\n      // Extend default queries\n      // namedQueries = $.extend(defaultQueries, namedQueries);\n    },\n\n    /**\n     * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n     * @function\n     * @private\n     * @returns {String} Name of the current breakpoint.\n     */\n    _getCurrentSize: function _getCurrentSize() {\n      var matched;\n\n      for (var i in this.queries) {\n        var query = this.queries[i];\n\n        if (window.matchMedia(query.value).matches) {\n          matched = query;\n        }\n      }\n\n      if ((typeof matched === 'undefined' ? 'undefined' : _typeof(matched)) === 'object') {\n        return matched.name;\n      } else {\n        return matched;\n      }\n    },\n\n    /**\n     * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\n     * @function\n     * @private\n     */\n    _watcher: function _watcher() {\n      var _this = this;\n\n      $(window).on('resize.zf.mediaquery', function () {\n        var newSize = _this._getCurrentSize();\n\n        if (newSize !== _this.current) {\n          // Broadcast the media query change on the window\n          $(window).trigger('changed.zf.mediaquery', [newSize, _this.current]);\n\n          // Change the current media query\n          _this.current = newSize;\n        }\n      });\n    }\n  };\n\n  Foundation.MediaQuery = MediaQuery;\n\n  // matchMedia() polyfill - Test a CSS media type/query in JS.\n  // Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\n  window.matchMedia || (window.matchMedia = function () {\n    'use strict';\n\n    // For browsers that support matchMedium api such as IE 9 and webkit\n\n    var styleMedia = window.styleMedia || window.media;\n\n    // For those that don't support matchMedium\n    if (!styleMedia) {\n      var style = document.createElement('style'),\n          script = document.getElementsByTagName('script')[0],\n          info = null;\n\n      style.type = 'text/css';\n      style.id = 'matchmediajs-test';\n\n      script.parentNode.insertBefore(style, script);\n\n      // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n      info = 'getComputedStyle' in window && window.getComputedStyle(style, null) || style.currentStyle;\n\n      styleMedia = {\n        matchMedium: function matchMedium(media) {\n          var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n          // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n          if (style.styleSheet) {\n            style.styleSheet.cssText = text;\n          } else {\n            style.textContent = text;\n          }\n\n          // Test if media query is true or false\n          return info.width === '1px';\n        }\n      };\n    }\n\n    return function (media) {\n      return {\n        matches: styleMedia.matchMedium(media || 'all'),\n        media: media || 'all'\n      };\n    };\n  }());\n\n  // Thank you: https://github.com/sindresorhus/query-string\n  function parseStyleToObject(str) {\n    var styleObject = {};\n\n    if (typeof str !== 'string') {\n      return styleObject;\n    }\n\n    str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n    if (!str) {\n      return styleObject;\n    }\n\n    styleObject = str.split('&').reduce(function (ret, param) {\n      var parts = param.replace(/\\+/g, ' ').split('=');\n      var key = parts[0];\n      var val = parts[1];\n      key = decodeURIComponent(key);\n\n      // missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n      val = val === undefined ? null : decodeURIComponent(val);\n\n      if (!ret.hasOwnProperty(key)) {\n        ret[key] = val;\n      } else if (Array.isArray(ret[key])) {\n        ret[key].push(val);\n      } else {\n        ret[key] = [ret[key], val];\n      }\n      return ret;\n    }, {});\n\n    return styleObject;\n  }\n}(jQuery, Foundation);\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n!function (Foundation, $) {\n  'use strict';\n  // Elements with [data-open] will reveal a plugin that supports it when clicked.\n\n  $(document).on('click.zf.trigger', '[data-open]', function () {\n    var id = $(this).data('open');\n    $('#' + id).triggerHandler('open.zf.trigger', [$(this)]);\n  });\n\n  // Elements with [data-close] will close a plugin that supports it when clicked.\n  // If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\n  $(document).on('click.zf.trigger', '[data-close]', function () {\n    var id = $(this).data('close');\n    if (id) {\n      $('#' + id).triggerHandler('close.zf.trigger', [$(this)]);\n    } else {\n      $(this).trigger('close.zf.trigger');\n    }\n  });\n\n  // Elements with [data-toggle] will toggle a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-toggle]', function () {\n    var id = $(this).data('toggle');\n    $('#' + id).triggerHandler('toggle.zf.trigger', [$(this)]);\n  });\n\n  // Elements with [data-closable] will respond to close.zf.trigger events.\n  $(document).on('close.zf.trigger', '[data-closable]', function (e) {\n    e.stopPropagation();\n    var animation = $(this).data('closable');\n\n    if (animation !== '') {\n      Foundation.Motion.animateOut($(this), animation, function () {\n        $(this).trigger('closed.zf');\n      });\n    } else {\n      $(this).fadeOut().trigger('closed.zf');\n    }\n  });\n\n  var MutationObserver = function () {\n    var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n    for (var i = 0; i < prefixes.length; i++) {\n      if (prefixes[i] + 'MutationObserver' in window) {\n        return window[prefixes[i] + 'MutationObserver'];\n      }\n    }\n    return false;\n  }();\n\n  var checkListeners = function checkListeners() {\n    eventsListener();\n    resizeListener();\n    scrollListener();\n    closemeListener();\n  };\n  /**\n  * Fires once after all other scripts have loaded\n  * @function\n  * @private\n  */\n  $(window).load(function () {\n    checkListeners();\n  });\n\n  //******** only fires this function once on load, if there's something to watch ********\n  var closemeListener = function closemeListener(pluginName) {\n    var yetiBoxes = $('[data-yeti-box]'),\n        plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n    if (pluginName) {\n      if (typeof pluginName === 'string') {\n        plugNames.push(pluginName);\n      } else if ((typeof pluginName === 'undefined' ? 'undefined' : _typeof(pluginName)) === 'object' && typeof pluginName[0] === 'string') {\n        plugNames.concat(pluginName);\n      } else {\n        console.error('Plugin names must be strings');\n      }\n    }\n    if (yetiBoxes.length) {\n      var listeners = plugNames.map(function (name) {\n        return 'closeme.zf.' + name;\n      }).join(' ');\n\n      $(window).off(listeners).on(listeners, function (e, pluginId) {\n        var plugin = e.namespace.split('.')[0];\n        var plugins = $('[data-' + plugin + ']').not('[data-yeti-box=\"' + pluginId + '\"]');\n\n        plugins.each(function () {\n          var _this = $(this);\n\n          _this.triggerHandler('close.zf.trigger', [_this]);\n        });\n      });\n    }\n  };\n  var resizeListener = function resizeListener(debounce) {\n    var timer,\n        $nodes = $('[data-resize]');\n    if ($nodes.length) {\n      $(window).off('resize.zf.trigger').on('resize.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('resizeme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a resize event\n          $nodes.attr('data-events', \"resize\");\n        }, debounce || 10); //default time to emit resize event\n      });\n    }\n  };\n  var scrollListener = function scrollListener(debounce) {\n    var timer,\n        $nodes = $('[data-scroll]');\n    if ($nodes.length) {\n      $(window).off('scroll.zf.trigger').on('scroll.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('scrollme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a scroll event\n          $nodes.attr('data-events', \"scroll\");\n        }, debounce || 10); //default time to emit scroll event\n      });\n    }\n  };\n  // function domMutationObserver(debounce) {\n  //   // !!! This is coming soon and needs more work; not active  !!! //\n  //   var timer,\n  //   nodes = document.querySelectorAll('[data-mutate]');\n  //   //\n  //   if (nodes.length) {\n  //     // var MutationObserver = (function () {\n  //     //   var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n  //     //   for (var i=0; i < prefixes.length; i++) {\n  //     //     if (prefixes[i] + 'MutationObserver' in window) {\n  //     //       return window[prefixes[i] + 'MutationObserver'];\n  //     //     }\n  //     //   }\n  //     //   return false;\n  //     // }());\n  //\n  //\n  //     //for the body, we need to listen for all changes effecting the style and class attributes\n  //     var bodyObserver = new MutationObserver(bodyMutation);\n  //     bodyObserver.observe(document.body, { attributes: true, childList: true, characterData: false, subtree:true, attributeFilter:[\"style\", \"class\"]});\n  //\n  //\n  //     //body callback\n  //     function bodyMutation(mutate) {\n  //       //trigger all listening elements and signal a mutation event\n  //       if (timer) { clearTimeout(timer); }\n  //\n  //       timer = setTimeout(function() {\n  //         bodyObserver.disconnect();\n  //         $('[data-mutate]').attr('data-events',\"mutate\");\n  //       }, debounce || 150);\n  //     }\n  //   }\n  // }\n  var eventsListener = function eventsListener() {\n    if (!MutationObserver) {\n      return false;\n    }\n    var nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\n\n    //element callback\n    var listeningElementsMutation = function listeningElementsMutation(mutationRecordsList) {\n      var $target = $(mutationRecordsList[0].target);\n      //trigger the event handler for the element depending on type\n      switch ($target.attr(\"data-events\")) {\n\n        case \"resize\":\n          $target.triggerHandler('resizeme.zf.trigger', [$target]);\n          break;\n\n        case \"scroll\":\n          $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n          break;\n\n        // case \"mutate\" :\n        // console.log('mutate', $target);\n        // $target.triggerHandler('mutate.zf.trigger');\n        //\n        // //make sure we don't get stuck in an infinite loop from sloppy codeing\n        // if ($target.index('[data-mutate]') == $(\"[data-mutate]\").length-1) {\n        //   domMutationObserver();\n        // }\n        // break;\n\n        default:\n          return false;\n        //nothing\n      }\n    };\n\n    if (nodes.length) {\n      //for each element that needs to listen for resizing, scrolling, (or coming soon mutation) add a single observer\n      for (var i = 0; i <= nodes.length - 1; i++) {\n        var elementObserver = new MutationObserver(listeningElementsMutation);\n        elementObserver.observe(nodes[i], { attributes: true, childList: false, characterData: false, subtree: false, attributeFilter: [\"data-events\"] });\n      }\n    }\n  };\n  // ------------------------------------\n\n  // [PH]\n  // Foundation.CheckWatchers = checkWatchers;\n  Foundation.IHearYou = checkListeners;\n  // Foundation.ISeeYou = scrollListener;\n  // Foundation.IFeelYou = closemeListener;\n}(window.Foundation, window.jQuery);\n'use strict';\n\n/**\n * Motion module.\n * @module foundation.motion\n */\n!function ($, Foundation) {\n\n  var initClasses = ['mui-enter', 'mui-leave'];\n  var activeClasses = ['mui-enter-active', 'mui-leave-active'];\n\n  function animate(isIn, element, animation, cb) {\n    element = $(element).eq(0);\n\n    if (!element.length) return;\n\n    var initClass = isIn ? initClasses[0] : initClasses[1];\n    var activeClass = isIn ? activeClasses[0] : activeClasses[1];\n\n    // Set up the animation\n    reset();\n    element.addClass(animation).css('transition', 'none');\n    //  .addClass(initClass);\n    // if(isIn) element.show();\n    requestAnimationFrame(function () {\n      element.addClass(initClass);\n      if (isIn) element.show();\n    });\n    // Start the animation\n    requestAnimationFrame(function () {\n      element[0].offsetWidth;\n      element.css('transition', '');\n      element.addClass(activeClass);\n    });\n    // Move(500, element, function(){\n    //   // element[0].offsetWidth;\n    //   element.css('transition', '');\n    //   element.addClass(activeClass);\n    // });\n\n    // Clean up the animation when it finishes\n    element.one(Foundation.transitionend(element), finish); //.one('finished.zf.animate', finish);\n\n    // Hides the element (for out animations), resets the element, and runs a callback\n    function finish() {\n      if (!isIn) element.hide();\n      reset();\n      if (cb) cb.apply(element);\n    }\n\n    // Resets transitions and removes motion-specific classes\n    function reset() {\n      element[0].style.transitionDuration = 0;\n      element.removeClass(initClass + ' ' + activeClass + ' ' + animation);\n    }\n  }\n\n  var Motion = {\n    animateIn: function animateIn(element, animation, /*duration,*/cb) {\n      animate(true, element, animation, cb);\n    },\n\n    animateOut: function animateOut(element, animation, /*duration,*/cb) {\n      animate(false, element, animation, cb);\n    }\n  };\n\n  var Move = function Move(duration, elem, fn) {\n    var anim,\n        prog,\n        start = null;\n    // console.log('called');\n\n    function move(ts) {\n      if (!start) start = window.performance.now();\n      // console.log(start, ts);\n      prog = ts - start;\n      fn.apply(elem);\n\n      if (prog < duration) {\n        anim = window.requestAnimationFrame(move, elem);\n      } else {\n        window.cancelAnimationFrame(anim);\n        elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\n      }\n    }\n    anim = window.requestAnimationFrame(move);\n  };\n\n  Foundation.Move = Move;\n  Foundation.Motion = Motion;\n}(jQuery, Foundation);\n'use strict';\n\n/**\n * DropdownMenu module.\n * @module foundation.dropdown-menu\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.nest\n */\n!function ($, Foundation) {\n  'use strict';\n\n  /**\n   * Creates a new instance of DropdownMenu.\n   * @class\n   * @fires DropdownMenu#init\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n\n  function DropdownMenu(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, DropdownMenu.defaults, this.$element.data(), options);\n\n    Foundation.Nest.Feather(this.$element, 'dropdown');\n    this._init();\n\n    Foundation.registerPlugin(this, 'DropdownMenu');\n    Foundation.Keyboard.register('DropdownMenu', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ARROW_RIGHT': 'next',\n      'ARROW_UP': 'up',\n      'ARROW_DOWN': 'down',\n      'ARROW_LEFT': 'previous',\n      'ESCAPE': 'close'\n    });\n  }\n\n  /**\n   * Default settings for plugin\n   */\n  DropdownMenu.defaults = {\n    /**\n     * Disallows hover events from opening submenus\n     * @option\n     * @example false\n     */\n    disableHover: false,\n    /**\n     * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\n     * @option\n     * @example true\n     */\n    autoclose: true,\n    /**\n     * Amount of time to delay opening a submenu on hover event.\n     * @option\n     * @example 50\n     */\n    hoverDelay: 50,\n    /**\n     * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\n     * @option\n     * @example true\n     */\n    clickOpen: false,\n    /**\n     * Amount of time to delay closing a submenu on a mouseleave event.\n     * @option\n     * @example 500\n     */\n\n    closingTime: 500,\n    /**\n     * Position of the menu relative to what direction the submenus should open. Handled by JS.\n     * @option\n     * @example 'left'\n     */\n    alignment: 'left',\n    /**\n     * Allow clicks on the body to close any open submenus.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\n     * @option\n     * @example 'vertical'\n     */\n    verticalClass: 'vertical',\n    /**\n     * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\n     * @option\n     * @example 'align-right'\n     */\n    rightClass: 'align-right',\n    /**\n     * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\n     * @option\n     * @example false\n     */\n    forceFollow: true\n  };\n  /**\n   * Initializes the plugin, and calls _prepareMenu\n   * @private\n   * @function\n   */\n  DropdownMenu.prototype._init = function () {\n    var subs = this.$element.find('li.is-dropdown-submenu-parent');\n    this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');\n\n    this.$menuItems = this.$element.find('[role=\"menuitem\"]');\n    this.$tabs = this.$element.children('[role=\"menuitem\"]');\n    this.isVert = this.$element.hasClass(this.options.verticalClass);\n    this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);\n\n    if (this.$element.hasClass(this.options.rightClass) || this.options.alignment === 'right' || Foundation.rtl()) {\n      this.options.alignment = 'right';\n      subs.addClass('is-left-arrow opens-left');\n    } else {\n      subs.addClass('is-right-arrow opens-right');\n    }\n    if (!this.isVert) {\n      this.$tabs.filter('.is-dropdown-submenu-parent').removeClass('is-right-arrow is-left-arrow opens-right opens-left').addClass('is-down-arrow');\n    }\n    this.changed = false;\n    this._events();\n  };\n  /**\n   * Adds event listeners to elements within the menu\n   * @private\n   * @function\n   */\n  DropdownMenu.prototype._events = function () {\n    var _this = this,\n        hasTouch = 'ontouchstart' in window || typeof window.ontouchstart !== 'undefined',\n        parClass = 'is-dropdown-submenu-parent';\n\n    if (this.options.clickOpen || hasTouch) {\n      this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu', function (e) {\n        var $elem = $(e.target).parentsUntil('ul', '.' + parClass),\n            hasSub = $elem.hasClass(parClass),\n            hasClicked = $elem.attr('data-is-click') === 'true',\n            $sub = $elem.children('.is-dropdown-submenu');\n\n        if (hasSub) {\n          if (hasClicked) {\n            if (!_this.options.closeOnClick || !_this.options.clickOpen && !hasTouch || _this.options.forceFollow && hasTouch) {\n              return;\n            } else {\n              e.stopImmediatePropagation();\n              e.preventDefault();\n              _this._hide($elem);\n            }\n          } else {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            _this._show($elem.children('.is-dropdown-submenu'));\n            $elem.add($elem.parentsUntil(_this.$element, '.' + parClass)).attr('data-is-click', true);\n          }\n        } else {\n          return;\n        }\n      });\n    }\n\n    if (!this.options.disableHover) {\n      this.$menuItems.on('mouseenter.zf.dropdownmenu', function (e) {\n        e.stopImmediatePropagation();\n        var $elem = $(this),\n            hasSub = $elem.hasClass(parClass);\n\n        if (hasSub) {\n          clearTimeout(_this.delay);\n          _this.delay = setTimeout(function () {\n            _this._show($elem.children('.is-dropdown-submenu'));\n          }, _this.options.hoverDelay);\n        }\n      }).on('mouseleave.zf.dropdownmenu', function (e) {\n        var $elem = $(this),\n            hasSub = $elem.hasClass(parClass);\n        if (hasSub && _this.options.autoclose) {\n          if ($elem.attr('data-is-click') === 'true' && _this.options.clickOpen) {\n            return false;\n          }\n\n          clearTimeout(_this.delay);\n          _this.delay = setTimeout(function () {\n            _this._hide($elem);\n          }, _this.options.closingTime);\n        }\n      });\n    }\n    this.$menuItems.on('keydown.zf.dropdownmenu', function (e) {\n      var $element = $(e.target).parentsUntil('ul', '[role=\"menuitem\"]'),\n          isTab = _this.$tabs.index($element) > -1,\n          $elements = isTab ? _this.$tabs : $element.siblings('li').add($element),\n          $prevElement,\n          $nextElement;\n\n      $elements.each(function (i) {\n        if ($(this).is($element)) {\n          $prevElement = $elements.eq(i - 1);\n          $nextElement = $elements.eq(i + 1);\n          return;\n        }\n      });\n\n      var nextSibling = function nextSibling() {\n        if (!$element.is(':last-child')) $nextElement.children('a:first').focus();\n      },\n          prevSibling = function prevSibling() {\n        $prevElement.children('a:first').focus();\n      },\n          openSub = function openSub() {\n        var $sub = $element.children('ul.is-dropdown-submenu');\n        if ($sub.length) {\n          _this._show($sub);\n          $element.find('li > a:first').focus();\n        } else {\n          return;\n        }\n      },\n          closeSub = function closeSub() {\n        //if ($element.is(':first-child')) {\n        var close = $element.parent('ul').parent('li');\n        close.children('a:first').focus();\n        _this._hide(close);\n        //}\n      };\n      var functions = {\n        open: openSub,\n        close: function close() {\n          _this._hide(_this.$element);\n          _this.$menuItems.find('a:first').focus(); // focus to first element\n        },\n        handled: function handled() {\n          e.preventDefault();\n          e.stopImmediatePropagation();\n        }\n      };\n\n      if (isTab) {\n        if (_this.vertical) {\n          // vertical menu\n          if (_this.options.alignment === 'left') {\n            // left aligned\n            $.extend(functions, {\n              down: nextSibling,\n              up: prevSibling,\n              next: openSub,\n              previous: closeSub\n            });\n          } else {\n            // right aligned\n            $.extend(functions, {\n              down: nextSibling,\n              up: prevSibling,\n              next: closeSub,\n              previous: openSub\n            });\n          }\n        } else {\n          // horizontal menu\n          $.extend(functions, {\n            next: nextSibling,\n            previous: prevSibling,\n            down: openSub,\n            up: closeSub\n          });\n        }\n      } else {\n        // not tabs -> one sub\n        if (_this.options.alignment === 'left') {\n          // left aligned\n          $.extend(functions, {\n            next: openSub,\n            previous: closeSub,\n            down: nextSibling,\n            up: prevSibling\n          });\n        } else {\n          // right aligned\n          $.extend(functions, {\n            next: closeSub,\n            previous: openSub,\n            down: nextSibling,\n            up: prevSibling\n          });\n        }\n      }\n      Foundation.Keyboard.handleKey(e, 'DropdownMenu', functions);\n    });\n  };\n  /**\n   * Adds an event handler to the body to close any dropdowns on a click.\n   * @function\n   * @private\n   */\n  DropdownMenu.prototype._addBodyHandler = function () {\n    var $body = $(document.body),\n        _this = this;\n    $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu').on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu', function (e) {\n      var $link = _this.$element.find(e.target);\n      if ($link.length) {\n        return;\n      }\n\n      _this._hide();\n      $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');\n    });\n  };\n  /**\n   * Opens a dropdown pane, and checks for collisions first.\n   * @param {jQuery} $sub - ul element that is a submenu to show\n   * @function\n   * @private\n   * @fires DropdownMenu#show\n   */\n  DropdownMenu.prototype._show = function ($sub) {\n    var idx = this.$tabs.index(this.$tabs.filter(function (i, el) {\n      return $(el).find($sub).length > 0;\n    }));\n    var $sibs = $sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');\n    this._hide($sibs, idx);\n    $sub.css('visibility', 'hidden').addClass('js-dropdown-active').attr({ 'aria-hidden': false }).parent('li.is-dropdown-submenu-parent').addClass('is-active').attr({ 'aria-expanded': true });\n    var clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n    if (!clear) {\n      var oldClass = this.options.alignment === 'left' ? '-right' : '-left',\n          $parentLi = $sub.parent('.is-dropdown-submenu-parent');\n      $parentLi.removeClass('opens' + oldClass).addClass('opens-' + this.options.alignment);\n      clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n      if (!clear) {\n        $parentLi.removeClass('opens-' + this.options.alignment).addClass('opens-inner');\n      }\n      this.changed = true;\n    }\n    $sub.css('visibility', '');\n    if (this.options.closeOnClick) {\n      this._addBodyHandler();\n    }\n    /**\n     * Fires when the new dropdown pane is visible.\n     * @event DropdownMenu#show\n     */\n    this.$element.trigger('show.zf.dropdownmenu', [$sub]);\n  };\n  /**\n   * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\n   * @function\n   * @param {jQuery} $elem - element with a submenu to hide\n   * @param {Number} idx - index of the $tabs collection to hide\n   * @private\n   */\n  DropdownMenu.prototype._hide = function ($elem, idx) {\n    var $toClose;\n    if ($elem && $elem.length) {\n      $toClose = $elem;\n    } else if (idx !== undefined) {\n      $toClose = this.$tabs.not(function (i, el) {\n        return i === idx;\n      });\n    } else {\n      $toClose = this.$element;\n    }\n    var somethingToClose = $toClose.hasClass('is-active') || $toClose.find('.is-active').length > 0;\n\n    if (somethingToClose) {\n      $toClose.find('li.is-active').add($toClose).attr({\n        'aria-expanded': false,\n        'data-is-click': false\n      }).removeClass('is-active');\n\n      $toClose.find('ul.js-dropdown-active').attr({\n        'aria-hidden': true\n      }).removeClass('js-dropdown-active');\n\n      if (this.changed || $toClose.find('opens-inner').length) {\n        var oldClass = this.options.alignment === 'left' ? 'right' : 'left';\n        $toClose.find('li.is-dropdown-submenu-parent').add($toClose).removeClass('opens-inner opens-' + this.options.alignment).addClass('opens-' + oldClass);\n        this.changed = false;\n      }\n      /**\n       * Fires when the open menus are closed.\n       * @event DropdownMenu#hide\n       */\n      this.$element.trigger('hide.zf.dropdownmenu', [$toClose]);\n    }\n  };\n  /**\n   * Destroys the plugin.\n   * @function\n   */\n  DropdownMenu.prototype.destroy = function () {\n    this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click').removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');\n    $(document.body).off('.zf.dropdownmenu');\n    Foundation.Nest.Burn(this.$element, 'dropdown');\n    Foundation.unregisterPlugin(this);\n  };\n\n  Foundation.plugin(DropdownMenu, 'DropdownMenu');\n}(jQuery, window.Foundation);\n'use strict';\n\n/**\n * OffCanvas module.\n * @module foundation.offcanvas\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.triggers\n * @requires foundation.util.motion\n */\n!function ($, Foundation) {\n\n  'use strict';\n\n  /**\n   * Creates a new instance of an off-canvas wrapper.\n   * @class\n   * @fires OffCanvas#init\n   * @param {Object} element - jQuery object to initialize.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n\n  function OffCanvas(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, OffCanvas.defaults, this.$element.data(), options);\n    this.$lastTrigger = $();\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this, 'OffCanvas');\n  }\n\n  OffCanvas.defaults = {\n    /**\n     * Allow the user to click outside of the menu to close it.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\n     * @option\n     * @example 500\n     */\n    transitionTime: 0,\n    /**\n     * Direction the offcanvas opens from. Determines class applied to body.\n     * @option\n     * @example left\n     */\n    position: 'left',\n    /**\n     * Force the page to scroll to top on open.\n     */\n    forceTop: true,\n    /**\n     * Allow the offcanvas to be sticky while open. Does nothing if Sass option `$maincontent-prevent-scroll === true`.\n     * Performance in Safari OSX/iOS is not great.\n     */\n    // isSticky: false,\n    /**\n     * Allow the offcanvas to remain open for certain breakpoints.\n     * @option\n     * @example false\n     */\n    isRevealed: false,\n    /**\n     * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class @`revealClass`.\n     * @option\n     * @example reveal-for-large\n     */\n    revealOn: null,\n    /**\n     * Force focus to the offcanvas on open. If true, will focus the opening trigger on close.\n     * @option\n     * @example true\n     */\n    autoFocus: true,\n    /**\n     * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\n     * @option\n     * TODO improve the regex testing for this.\n     * @example reveal-for-large\n     */\n    revealClass: 'reveal-for-',\n    /**\n     * Triggers optional focus trapping when opening an offcanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\n     * @option\n     * @example true\n     */\n    trapFocus: false\n  };\n\n  /**\n   * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\n   * @function\n   * @private\n   */\n  OffCanvas.prototype._init = function () {\n    var id = this.$element.attr('id');\n\n    this.$element.attr('aria-hidden', 'true');\n\n    // Find triggers that affect this element and add aria-expanded to them\n    $(document).find('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-expanded', 'false').attr('aria-controls', id);\n\n    // Add a close trigger over the body if necessary\n    if (this.options.closeOnClick) {\n      if ($('.js-off-canvas-exit').length) {\n        this.$exiter = $('.js-off-canvas-exit');\n      } else {\n        var exiter = document.createElement('div');\n        exiter.setAttribute('class', 'js-off-canvas-exit');\n        $('[data-off-canvas-content]').append(exiter);\n\n        this.$exiter = $(exiter);\n      }\n    }\n\n    this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, 'g').test(this.$element[0].className);\n\n    if (this.options.isRevealed) {\n      this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];\n      this._setMQChecker();\n    }\n    if (!this.options.transitionTime) {\n      this.options.transitionTime = parseFloat(window.getComputedStyle($('[data-off-canvas-wrapper]')[0]).transitionDuration) * 1000;\n    }\n  };\n\n  /**\n   * Adds event handlers to the off-canvas wrapper and the exit overlay.\n   * @function\n   * @private\n   */\n  OffCanvas.prototype._events = function () {\n    this.$element.off('.zf.trigger .zf.offcanvas').on({\n      'open.zf.trigger': this.open.bind(this),\n      'close.zf.trigger': this.close.bind(this),\n      'toggle.zf.trigger': this.toggle.bind(this),\n      'keydown.zf.offcanvas': this._handleKeyboard.bind(this)\n    });\n\n    if (this.options.closeOnClick && this.$exiter.length) {\n      this.$exiter.on({ 'click.zf.offcanvas': this.close.bind(this) });\n    }\n  };\n  /**\n   * Applies event listener for elements that will reveal at certain breakpoints.\n   * @private\n   */\n  OffCanvas.prototype._setMQChecker = function () {\n    var _this = this;\n\n    $(window).on('changed.zf.mediaquery', function () {\n      if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n        _this.reveal(true);\n      } else {\n        _this.reveal(false);\n      }\n    }).one('load.zf.offcanvas', function () {\n      if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n        _this.reveal(true);\n      }\n    });\n  };\n  /**\n   * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\n   * @param {Boolean} isRevealed - true if element should be revealed.\n   * @function\n   */\n  OffCanvas.prototype.reveal = function (isRevealed) {\n    var $closer = this.$element.find('[data-close]');\n    if (isRevealed) {\n      this.close();\n      this.isRevealed = true;\n      // if(!this.options.forceTop){\n      //   var scrollPos = parseInt(window.pageYOffset);\n      //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n      // }\n      // if(this.options.isSticky){ this._stick(); }\n      this.$element.off('open.zf.trigger toggle.zf.trigger');\n      if ($closer.length) {\n        $closer.hide();\n      }\n    } else {\n      this.isRevealed = false;\n      // if(this.options.isSticky || !this.options.forceTop){\n      //   this.$element[0].style.transform = '';\n      //   $(window).off('scroll.zf.offcanvas');\n      // }\n      this.$element.on({\n        'open.zf.trigger': this.open.bind(this),\n        'toggle.zf.trigger': this.toggle.bind(this)\n      });\n      if ($closer.length) {\n        $closer.show();\n      }\n    }\n  };\n\n  /**\n   * Opens the off-canvas menu.\n   * @function\n   * @param {Object} event - Event object passed from listener.\n   * @param {jQuery} trigger - element that triggered the off-canvas to open.\n   * @fires OffCanvas#opened\n   */\n  OffCanvas.prototype.open = function (event, trigger) {\n    if (this.$element.hasClass('is-open') || this.isRevealed) {\n      return;\n    }\n    var _this = this,\n        $body = $(document.body);\n    $('body').scrollTop(0);\n    // window.pageYOffset = 0;\n\n    // if(!this.options.forceTop){\n    //   var scrollPos = parseInt(window.pageYOffset);\n    //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n    //   if(this.$exiter.length){\n    //     this.$exiter[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n    //   }\n    // }\n    /**\n     * Fires when the off-canvas menu opens.\n     * @event OffCanvas#opened\n     */\n    Foundation.Move(this.options.transitionTime, this.$element, function () {\n      $('[data-off-canvas-wrapper]').addClass('is-off-canvas-open is-open-' + _this.options.position);\n\n      _this.$element.addClass('is-open');\n\n      // if(_this.options.isSticky){\n      //   _this._stick();\n      // }\n    });\n    this.$element.attr('aria-hidden', 'false').trigger('opened.zf.offcanvas');\n\n    if (this.options.closeOnClick) {\n      this.$exiter.addClass('is-visible');\n    }\n    if (trigger) {\n      this.$lastTrigger = trigger.attr('aria-expanded', 'true');\n    }\n    if (this.options.autoFocus) {\n      this.$element.one('finished.zf.animate', function () {\n        _this.$element.find('a, button').eq(0).focus();\n      });\n    }\n    if (this.options.trapFocus) {\n      $('[data-off-canvas-content]').attr('tabindex', '-1');\n      this._trapFocus();\n    }\n  };\n  /**\n   * Traps focus within the offcanvas on open.\n   * @private\n   */\n  OffCanvas.prototype._trapFocus = function () {\n    var focusable = Foundation.Keyboard.findFocusable(this.$element),\n        first = focusable.eq(0),\n        last = focusable.eq(-1);\n\n    focusable.off('.zf.offcanvas').on('keydown.zf.offcanvas', function (e) {\n      if (e.which === 9 || e.keycode === 9) {\n        if (e.target === last[0] && !e.shiftKey) {\n          e.preventDefault();\n          first.focus();\n        }\n        if (e.target === first[0] && e.shiftKey) {\n          e.preventDefault();\n          last.focus();\n        }\n      }\n    });\n  };\n  /**\n   * Allows the offcanvas to appear sticky utilizing translate properties.\n   * @private\n   */\n  // OffCanvas.prototype._stick = function(){\n  //   var elStyle = this.$element[0].style;\n  //\n  //   if(this.options.closeOnClick){\n  //     var exitStyle = this.$exiter[0].style;\n  //   }\n  //\n  //   $(window).on('scroll.zf.offcanvas', function(e){\n  //     console.log(e);\n  //     var pageY = window.pageYOffset;\n  //     elStyle.transform = 'translate(0,' + pageY + 'px)';\n  //     if(exitStyle !== undefined){ exitStyle.transform = 'translate(0,' + pageY + 'px)'; }\n  //   });\n  //   // this.$element.trigger('stuck.zf.offcanvas');\n  // };\n  /**\n   * Closes the off-canvas menu.\n   * @function\n   * @param {Function} cb - optional cb to fire after closure.\n   * @fires OffCanvas#closed\n   */\n  OffCanvas.prototype.close = function (cb) {\n    if (!this.$element.hasClass('is-open') || this.isRevealed) {\n      return;\n    }\n\n    var _this = this;\n\n    //  Foundation.Move(this.options.transitionTime, this.$element, function(){\n    $('[data-off-canvas-wrapper]').removeClass('is-off-canvas-open is-open-' + _this.options.position);\n    _this.$element.removeClass('is-open');\n    // Foundation._reflow();\n    // });\n    this.$element.attr('aria-hidden', 'true')\n    /**\n     * Fires when the off-canvas menu opens.\n     * @event OffCanvas#closed\n     */\n    .trigger('closed.zf.offcanvas');\n    // if(_this.options.isSticky || !_this.options.forceTop){\n    //   setTimeout(function(){\n    //     _this.$element[0].style.transform = '';\n    //     $(window).off('scroll.zf.offcanvas');\n    //   }, this.options.transitionTime);\n    // }\n    if (this.options.closeOnClick) {\n      this.$exiter.removeClass('is-visible');\n    }\n\n    this.$lastTrigger.attr('aria-expanded', 'false');\n    if (this.options.trapFocus) {\n      $('[data-off-canvas-content]').removeAttr('tabindex');\n    }\n  };\n\n  /**\n   * Toggles the off-canvas menu open or closed.\n   * @function\n   * @param {Object} event - Event object passed from listener.\n   * @param {jQuery} trigger - element that triggered the off-canvas to open.\n   */\n  OffCanvas.prototype.toggle = function (event, trigger) {\n    if (this.$element.hasClass('is-open')) {\n      this.close(event, trigger);\n    } else {\n      this.open(event, trigger);\n    }\n  };\n\n  /**\n   * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\n   * @function\n   * @private\n   */\n  OffCanvas.prototype._handleKeyboard = function (event) {\n    if (event.which !== 27) return;\n\n    event.stopPropagation();\n    event.preventDefault();\n    this.close();\n    this.$lastTrigger.focus();\n  };\n  /**\n   * Destroys the offcanvas plugin.\n   * @function\n   */\n  OffCanvas.prototype.destroy = function () {\n    this.close();\n    this.$element.off('.zf.trigger .zf.offcanvas');\n    this.$exiter.off('.zf.offcanvas');\n\n    Foundation.unregisterPlugin(this);\n  };\n\n  Foundation.plugin(OffCanvas, 'OffCanvas');\n}(jQuery, Foundation);\n'use strict';\n\n/**\n * Reveal module.\n * @module foundation.reveal\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.motion if using animations\n */\n!function (Foundation, $) {\n  'use strict';\n\n  /**\n   * Creates a new instance of Reveal.\n   * @class\n   * @param {jQuery} element - jQuery object to use for the modal.\n   * @param {Object} options - optional parameters.\n   */\n\n  function Reveal(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n    this._init();\n\n    Foundation.registerPlugin(this, 'Reveal');\n    Foundation.Keyboard.register('Reveal', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ESCAPE': 'close',\n      'TAB': 'tab_forward',\n      'SHIFT_TAB': 'tab_backward'\n    });\n  }\n\n  Reveal.defaults = {\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-in-left'\n     */\n    animationIn: '',\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-out-right'\n     */\n    animationOut: '',\n    /**\n     * Time, in ms, to delay the opening of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    showDelay: 0,\n    /**\n     * Time, in ms, to delay the closing of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    hideDelay: 0,\n    /**\n     * Allows a click on the body/overlay to close the modal.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Allows the modal to close if the user presses the `ESCAPE` key.\n     * @option\n     * @example true\n     */\n    closeOnEsc: true,\n    /**\n     * If true, allows multiple modals to be displayed at once.\n     * @option\n     * @example false\n     */\n    multipleOpened: false,\n    /**\n     * Distance, in pixels, the modal should push down from the top of the screen.\n     * @option\n     * @example 100\n     */\n    vOffset: 100,\n    /**\n     * Distance, in pixels, the modal should push in from the side of the screen.\n     * @option\n     * @example 0\n     */\n    hOffset: 0,\n    /**\n     * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\n     * @option\n     * @example false\n     */\n    fullScreen: false,\n    /**\n     * Percentage of screen height the modal should push up from the bottom of the view.\n     * @option\n     * @example 10\n     */\n    btmOffsetPct: 10,\n    /**\n     * Allows the modal to generate an overlay div, which will cover the view when modal opens.\n     * @option\n     * @example true\n     */\n    overlay: true,\n    /**\n     * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\n     * @option\n     * @example false\n     */\n    resetOnClose: false,\n    /**\n     * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\n     * @option\n     * @example false\n     */\n    deepLink: false\n  };\n\n  /**\n   * Initializes the modal by adding the overlay and close buttons, (if selected).\n   * @private\n   */\n  Reveal.prototype._init = function () {\n    this.id = this.$element.attr('id');\n    this.isActive = false;\n\n    this.$anchor = $('[data-open=\"' + this.id + '\"]').length ? $('[data-open=\"' + this.id + '\"]') : $('[data-toggle=\"' + this.id + '\"]');\n\n    if (this.$anchor.length) {\n      var anchorId = this.$anchor[0].id || Foundation.GetYoDigits(6, 'reveal');\n\n      this.$anchor.attr({\n        'aria-controls': this.id,\n        'id': anchorId,\n        'aria-haspopup': true,\n        'tabindex': 0\n      });\n      this.$element.attr({ 'aria-labelledby': anchorId });\n    }\n\n    // this.options.fullScreen = this.$element.hasClass('full');\n    if (this.options.fullScreen || this.$element.hasClass('full')) {\n      this.options.fullScreen = true;\n      this.options.overlay = false;\n    }\n    if (this.options.overlay && !this.$overlay) {\n      this.$overlay = this._makeOverlay(this.id);\n    }\n\n    this.$element.attr({\n      'role': 'dialog',\n      'aria-hidden': true,\n      'data-yeti-box': this.id,\n      'data-resize': this.id\n    });\n\n    this._events();\n    if (this.options.deepLink && window.location.hash === '#' + this.id) {\n      $(window).one('load.zf.reveal', this.open.bind(this));\n    }\n  };\n\n  /**\n   * Creates an overlay div to display behind the modal.\n   * @private\n   */\n  Reveal.prototype._makeOverlay = function (id) {\n    var $overlay = $('<div></div>').addClass('reveal-overlay').attr({ 'tabindex': -1, 'aria-hidden': true }).appendTo('body');\n    if (this.options.closeOnClick) {\n      $overlay.attr({\n        'data-close': id\n      });\n    }\n    return $overlay;\n  };\n\n  /**\n   * Adds event handlers for the modal.\n   * @private\n   */\n  Reveal.prototype._events = function () {\n    var _this = this;\n\n    this.$element.on({\n      'open.zf.trigger': this.open.bind(this),\n      'close.zf.trigger': this.close.bind(this),\n      'toggle.zf.trigger': this.toggle.bind(this),\n      'resizeme.zf.trigger': function resizemeZfTrigger() {\n        if (_this.$element.is(':visible')) {\n          _this._setPosition(function () {});\n        }\n      }\n    });\n\n    if (this.$anchor.length) {\n      this.$anchor.on('keydown.zf.reveal', function (e) {\n        if (e.which === 13 || e.which === 32) {\n          e.stopPropagation();\n          e.preventDefault();\n          _this.open();\n        }\n      });\n    }\n\n    if (this.options.closeOnClick && this.options.overlay) {\n      this.$overlay.off('.zf.reveal').on('click.zf.reveal', this.close.bind(this));\n    }\n    if (this.options.deepLink) {\n      $(window).on('popstate.zf.reveal:' + this.id, this._handleState.bind(this));\n    }\n  };\n  /**\n   * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\n   * @private\n   */\n  Reveal.prototype._handleState = function (e) {\n    if (window.location.hash === '#' + this.id && !this.isActive) {\n      this.open();\n    } else {\n      this.close();\n    }\n  };\n  /**\n   * Sets the position of the modal before opening\n   * @param {Function} cb - a callback function to execute when positioning is complete.\n   * @private\n   */\n  Reveal.prototype._setPosition = function (cb) {\n    var eleDims = Foundation.Box.GetDimensions(this.$element);\n    var elePos = this.options.fullScreen ? 'reveal full' : eleDims.height >= 0.5 * eleDims.windowDims.height ? 'reveal' : 'center';\n\n    if (elePos === 'reveal full') {\n      //set to full height/width\n      this.$element.offset(Foundation.Box.GetOffsets(this.$element, null, elePos, this.options.vOffset)).css({\n        'height': eleDims.windowDims.height,\n        'width': eleDims.windowDims.width\n      });\n    } else if (!Foundation.MediaQuery.atLeast('medium') || !Foundation.Box.ImNotTouchingYou(this.$element, null, true, false)) {\n      //if smaller than medium, resize to 100% width minus any custom L/R margin\n      this.$element.css({\n        'width': eleDims.windowDims.width - this.options.hOffset * 2\n      }).offset(Foundation.Box.GetOffsets(this.$element, null, 'center', this.options.vOffset, this.options.hOffset));\n      //flag a boolean so we can reset the size after the element is closed.\n      this.changedSize = true;\n    } else {\n      this.$element.css({\n        'max-height': eleDims.windowDims.height - this.options.vOffset * (this.options.btmOffsetPct / 100 + 1),\n        'width': ''\n      }).offset(Foundation.Box.GetOffsets(this.$element, null, elePos, this.options.vOffset));\n      //the max height based on a percentage of vertical offset plus vertical offset\n    }\n\n    cb();\n  };\n\n  /**\n   * Opens the modal controlled by `this.$anchor`, and closes all others by default.\n   * @function\n   * @fires Reveal#closeme\n   * @fires Reveal#open\n   */\n  Reveal.prototype.open = function () {\n    if (this.options.deepLink) {\n      var hash = '#' + this.id;\n\n      if (window.history.pushState) {\n        window.history.pushState(null, null, hash);\n      } else {\n        window.location.hash = hash;\n      }\n    }\n\n    var _this = this;\n    this.isActive = true;\n    //make element invisible, but remove display: none so we can get size and positioning\n    this.$element.css({ 'visibility': 'hidden' }).show().scrollTop(0);\n\n    this._setPosition(function () {\n      _this.$element.hide().css({ 'visibility': '' });\n      if (!_this.options.multipleOpened) {\n        /**\n         * Fires immediately before the modal opens.\n         * Closes any other modals that are currently open\n         * @event Reveal#closeme\n         */\n        _this.$element.trigger('closeme.zf.reveal', _this.id);\n      }\n      if (_this.options.animationIn) {\n        if (_this.options.overlay) {\n          Foundation.Motion.animateIn(_this.$overlay, 'fade-in', function () {\n            Foundation.Motion.animateIn(_this.$element, _this.options.animationIn, function () {\n              _this.focusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n            });\n          });\n        } else {\n          Foundation.Motion.animateIn(_this.$element, _this.options.animationIn, function () {\n            _this.focusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n          });\n        }\n      } else {\n        if (_this.options.overlay) {\n          _this.$overlay.show(0, function () {\n            _this.$element.show(_this.options.showDelay, function () {});\n          });\n        } else {\n          _this.$element.show(_this.options.showDelay, function () {});\n        }\n      }\n    });\n\n    // handle accessibility\n    this.$element.attr({ 'aria-hidden': false }).attr('tabindex', -1).focus()\n    /**\n     * Fires when the modal has successfully opened.\n     * @event Reveal#open\n     */\n    .trigger('open.zf.reveal');\n\n    $('body').addClass('is-reveal-open').attr({ 'aria-hidden': this.options.overlay || this.options.fullScreen ? true : false });\n    setTimeout(function () {\n      _this._extraHandlers();\n    }, 0);\n  };\n\n  /**\n   * Adds extra event handlers for the body and window if necessary.\n   * @private\n   */\n  Reveal.prototype._extraHandlers = function () {\n    var _this = this;\n    this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n\n    if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\n      $('body').on('click.zf.reveal', function (e) {\n        if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\n          return;\n        }\n        _this.close();\n      });\n    }\n    if (this.options.closeOnEsc) {\n      $(window).on('keydown.zf.reveal', function (e) {\n        Foundation.Keyboard.handleKey(e, 'Reveal', {\n          close: function close() {\n            if (_this.options.closeOnEsc) {\n              _this.close();\n              _this.$anchor.focus();\n            }\n          }\n        });\n        if (_this.focusableElements.length === 0) {\n          // no focusable elements inside the modal at all, prevent tabbing in general\n          e.preventDefault();\n        }\n      });\n    }\n\n    // lock focus within modal while tabbing\n    this.$element.on('keydown.zf.reveal', function (e) {\n      var $target = $(this);\n      // handle keyboard event with keyboard util\n      Foundation.Keyboard.handleKey(e, 'Reveal', {\n        tab_forward: function tab_forward() {\n          if (_this.$element.find(':focus').is(_this.focusableElements.eq(-1))) {\n            // left modal downwards, setting focus to first element\n            _this.focusableElements.eq(0).focus();\n            e.preventDefault();\n          }\n        },\n        tab_backward: function tab_backward() {\n          if (_this.$element.find(':focus').is(_this.focusableElements.eq(0)) || _this.$element.is(':focus')) {\n            // left modal upwards, setting focus to last element\n            _this.focusableElements.eq(-1).focus();\n            e.preventDefault();\n          }\n        },\n        open: function open() {\n          if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\n            setTimeout(function () {\n              // set focus back to anchor if close button has been activated\n              _this.$anchor.focus();\n            }, 1);\n          } else if ($target.is(_this.focusableElements)) {\n            // dont't trigger if acual element has focus (i.e. inputs, links, ...)\n            _this.open();\n          }\n        },\n        close: function close() {\n          if (_this.options.closeOnEsc) {\n            _this.close();\n            _this.$anchor.focus();\n          }\n        }\n      });\n    });\n  };\n\n  /**\n   * Closes the modal.\n   * @function\n   * @fires Reveal#closed\n   */\n  Reveal.prototype.close = function () {\n    if (!this.isActive || !this.$element.is(':visible')) {\n      return false;\n    }\n    var _this = this;\n\n    if (this.options.animationOut) {\n      Foundation.Motion.animateOut(this.$element, this.options.animationOut, function () {\n        if (_this.options.overlay) {\n          Foundation.Motion.animateOut(_this.$overlay, 'fade-out', finishUp);\n        } else {\n          finishUp();\n        }\n      });\n    } else {\n      this.$element.hide(_this.options.hideDelay, function () {\n        if (_this.options.overlay) {\n          _this.$overlay.hide(0, finishUp);\n        } else {\n          finishUp();\n        }\n      });\n    }\n    //conditionals to remove extra event listeners added on open\n    if (this.options.closeOnEsc) {\n      $(window).off('keydown.zf.reveal');\n    }\n    if (!this.options.overlay && this.options.closeOnClick) {\n      $('body').off('click.zf.reveal');\n    }\n    this.$element.off('keydown.zf.reveal');\n    function finishUp() {\n      //if the modal changed size, reset it\n      if (_this.changedSize) {\n        _this.$element.css({\n          'height': '',\n          'width': ''\n        });\n      }\n      $('body').removeClass('is-reveal-open').attr({ 'aria-hidden': false, 'tabindex': '' });\n      _this.$element.attr({ 'aria-hidden': true })\n      /**\n      * Fires when the modal is done closing.\n      * @event Reveal#closed\n      */\n      .trigger('closed.zf.reveal');\n    }\n\n    /**\n    * Resets the modal content\n    * This prevents a running video to keep going in the background\n    */\n    if (this.options.resetOnClose) {\n      this.$element.html(this.$element.html());\n    }\n\n    this.isActive = false;\n    if (_this.options.deepLink) {\n      if (window.history.replaceState) {\n        window.history.replaceState(\"\", document.title, window.location.pathname);\n      } else {\n        window.location.hash = '';\n      }\n    }\n  };\n  /**\n   * Toggles the open/closed state of a modal.\n   * @function\n   */\n  Reveal.prototype.toggle = function () {\n    if (this.isActive) {\n      this.close();\n    } else {\n      this.open();\n    }\n  };\n\n  /**\n   * Destroys an instance of a modal.\n   * @function\n   */\n  Reveal.prototype.destroy = function () {\n    if (this.options.overlay) {\n      this.$overlay.hide().off().remove();\n    }\n    this.$element.hide().off();\n    this.$anchor.off('.zf');\n    $(window).off('.zf.reveal:' + this.id);\n\n    Foundation.unregisterPlugin(this);\n  };\n\n  Foundation.plugin(Reveal, 'Reveal');\n\n  // Exports for AMD/Browserify\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') module.exports = Reveal;\n  if (typeof define === 'function') define(['foundation'], function () {\n    return Reveal;\n  });\n}(Foundation, jQuery);\n\"use strict\";\n\njQuery(function ($) {\n\n    $(document).foundation();\n});\n'use strict';\n\njQuery(document).ready(function ($) {\n\n    $('.realbig-slider').each(function (index) {\n\n        $(this).addClass('slider-' + index);\n    });\n\n    $('.realbig-slider.default').each(function () {\n        // Uses default settings. Set default_js = false in the shortcode to provide a custom instantiation\n\n        $(this).RealBigSlider();\n    });\n\n    $('#home-slider .realbig-slider').RealBigSlider({\n        slideDuration: '7000',\n        speed: 500,\n        arrowRight: '#home-slider .realbig-slider .arrow-right',\n        arrowLeft: '#home-slider .realbig-slider .arrow-left'\n    });\n});\n'use strict';\n\njQuery(function ($) {\n\n    if ($('#wasentha_testimonial-shortcode').length > 0) {\n\n        $.ajax({\n\n            type: 'POST',\n            url: wasentha_theme_data.ajaxUrl,\n            data: {\n\n                testimonial_category: $('#wasentha_testimonial-shortcode').data('category'),\n                action: 'get_testimonial' // The name of the action hook. It uses the function named \"get_wasentha_testimonial_callback\"\n\n            },\n\n            success: function success(response) {\n\n                var options = jQuery.parseJSON(response); // Parses JSON from the AJAX response\n\n                options = options[Math.floor(Math.random() * options.length)]; // Choose One at Random\n\n                if (options.name !== '' && options.body !== '') {\n\n                    $('#wasentha_testimonial-shortcode .author span').html(options.name);\n                    $('#wasentha_testimonial-shortcode .testimonials-text').html(options.body);\n\n                    $('#wasentha_testimonial-shortcode .testimonial-loading').hide();\n                    $('#wasentha_testimonial-shortcode .testimonials-content').show();\n                }\n            }\n\n        });\n    }\n});",";( function( $ ) {\n\n    /*\n    * We define RealBigSlider as a variable of type ‘function’.\n    * Here, we use an anonymous function to ensure\n    * that the logic inside the function is executed immediately.\n    *\n    */\n    var RealBigSlider = ( function( element, settings ) {\n\n        var instanceUid = 0;\n\n        /*\n        * The constructor function for RealBigSlider\n        *\n        */\n        function _RealBigSlider( element, settings ) {\n\n            // Ensures the element selectors are as specific to the slider itself as possible.\n            var selector = '.' + element.className.replace( /\\s/g, '.' );\n\n            this.defaults = {\n                slideDuration: '3000',\n                speed: 500,\n                arrowRight: selector + ' .arrow-right',\n                arrowLeft: selector + ' .arrow-left'\n            };\n\n            // We create a new property to hold our default settings after they\n            // have been merged with user supplied settings\n            this.settings = $.extend( {}, this, this.defaults, settings );\n\n            // This object holds values that will change as the plugin operates\n            this.initials = {\n                currSlide : 0,\n                $currSlide: null,\n                totalSlides : false,\n                csstransitions: false\n            };\n\n            // Attaches the properties of this.initials as direct properties of RealBigSlider\n            $.extend( this, this.initials );\n\n            // Here we'll hold a reference to the DOM element passed in\n            // by the $.each function when this plugin was instantiated\n            this.$el = $( element );\n\n            // Ensure that the value of 'this' always references RealBigSlider\n            this.changeSlide = $.proxy( this.changeSlide, this );\n\n            // We'll call our initiator function to get things rolling!\n            this.init();\n\n            // A little bit of metadata about the instantiated object\n            // This property will be incremented everytime a new RealBigSlider slider is created\n            // It provides each slider with a unique ID\n            this.instanceUid = instanceUid++;\n        }\n\n        return _RealBigSlider;\n\n    } )();\n\n    /**\n     * Called once per instance\n     * Calls starter methods and associate the '.realbig-slider' class\n     * @params void\n     * @returns void\n     *\n     */\n    RealBigSlider.prototype.init = function() {\n        //Test to see if cssanimations are available\n        this.csstransitionsTest();\n        // Add a class so we can style our slider\n        // Build out any DOM elements needed for the plugin to run\n        // Eg, we'll create an indicator dot for every slide in the slider\n        this.build();\n        // Eg. Let the user click next/prev arrows or indicator dots\n        this.events();\n        // Bind any events we'll need for the slider to function\n        this.activate();\n        // Start the timer loop to control progression to the next slide\n        this.initTimer();\n    };\n\n    /**\n\t * Appropriated out of Modernizr v2.8.3\n\t * Creates a new DOM element and tests existence of properties on it's\n\t * Style object to see if CSSTransitions are available\n\t * @params void\n\t * @returns void\n\t *\n\t */\n    RealBigSlider.prototype.csstransitionsTest = function() {\n        var elem = document.createElement( 'modernizr' );\n        //A list of properties to test for\n        var props = [\"transition\", \"WebkitTransition\", \"MozTransition\", \"OTransition\", \"msTransition\"];\n        //Iterate through our new element's Style property to see if these properties exist\n        for ( var i in props ) {\n            var prop = props[i];\n            var result = elem.style[prop] !== undefined ? prop : false;\n            if ( result ) {\n                this.csstransitions = result;\n                break;\n            }\n        }\n    };\n\n    /**\n\t * Add the CSSTransition duration to the DOM Object's Style property\n\t * We trigger this function just before we want the slides to animate\n\t * @params void\n\t * @returns void\n\t *\n\t */\n    RealBigSlider.prototype.addCSSDuration = function() {\n        var _ = this;\n        this.$el.find( '.slide' ).each( function() {\n            this.style[_.csstransitions+'Duration'] = _.settings.speed+'ms';\n        } );\n    }\n\n    /**\n   * Remove the CSSTransition duration from the DOM Object's style property\n   * We trigger this function just after the slides have animated\n   * @params void\n   * @returns void\n   *\n   */\n    RealBigSlider.prototype.removeCSSDuration = function() {\n        var _ = this;\n        this.$el.find( '.slide' ).each( function() {\n            this.style[_.csstransitions+'Duration'] = '';\n        } );\n    }\n\n    /**\n\t * Creates a list of indicators based on the amount of slides\n\t * @params void\n\t * @returns void\n\t *\n\t */\n    RealBigSlider.prototype.build = function() {\n        var $indicators = this.$el.find( '.indicators' );\n        this.totalSlides = this.$el.find( '.slide' ).length;\n        for( var i = 0; i < this.totalSlides; i++ ) $indicators.append( '<li data-index='+i+'>' );\n    };\n\n    /**\n\t * Activates the first slide\n\t * Activates the first indicator\n\t * @params void\n\t * @returns void\n\t *\n\t */\n    RealBigSlider.prototype.activate = function() {\n        this.$currSlide = this.$el.find( '.slide' ).eq( 0 );\n        this.$el.find( '.indicators li' ).eq( 0 ).addClass( 'active' );\n    };\n\n    /**\n   * Associate event handlers to events\n   * For arrow events, we send the placement of the next slide to the handler\n   * @params void\n   * @returns void\n   *\n   */\n    RealBigSlider.prototype.events = function() {\n        $( 'body' )\n            .on( 'click', this.settings.arrowRight, {direction: 'right'}, this.changeSlide )\n            .on( 'click', this.settings.arrowLeft, {direction: 'left'}, this.changeSlide )\n            .on( 'click', '.indicators li', this.changeSlide );\n    };\n\n    /**\n\t * TIMER\n\t * Resets the timer\n\t * @params void\n\t * @returns void\n\t *\n\t */\n    RealBigSlider.prototype.clearTimer = function() {\n        if ( this.timer ) clearInterval( this.timer );\n    };\n\n    /**\n\t * TIMER\n\t * Initialise the timer\n\t * @params void\n\t * @returns void\n\t *\n\t */\n    RealBigSlider.prototype.initTimer = function() {\n        this.timer = setInterval( this.changeSlide, this.settings.slideDuration );\n    };\n\n    /**\n\t * TIMER\n\t * Start the timer\n\t * Reset the throttle to allow changeSlide to be executable\n\t * @params void\n\t * @returns void\n\t *\n\t */\n    RealBigSlider.prototype.startTimer = function() {\n        this.initTimer();\n        this.throttle = false;\n    };\n\n    /**\n\t * MAIN LOGIC HANDLER\n\t * Triggers a set of subfunctions to carry out the animation\n\t * @params\tobject\tevent\n\t * @returns void\n\t *\n\t */\n    RealBigSlider.prototype.changeSlide = function( e ) {\n        //Ensure that animations are triggered one at a time\n        if ( this.throttle ) return;\n        this.throttle = true;\n\n        //Stop the timer as the animation is getting carried out\n        this.clearTimer();\n\n        // Returns the animation direction ( left or right )\n        var direction = this._direction( e );\n\n        // Selects the next slide\n        var animate = this._next( e, direction );\n        if ( !animate ) return;\n\n        //Active the next slide to scroll into view\n        var $nextSlide = this.$el.find( '.slide' ).eq( this.currSlide ).addClass( direction + ' active' );\n\n        if ( !this.csstransitions ) {\n            this._jsAnimation( $nextSlide, direction );\n        } else{\n            this._cssAnimation( $nextSlide, direction );\n        }\n    };\n\n    /**\n\t * Returns the animation direction, right or left\n\t * @params\tobject\tevent\n\t * @returns strong\tanimation direction\n\t *\n\t */\n    RealBigSlider.prototype._direction = function( e ) {\n        var direction;\n\n        // Default to forward movement\n        if ( typeof e !== 'undefined' ) {\n            direction = ( typeof e.data === 'undefined' ? 'right' : e.data.direction );\n        } else{\n            direction = 'right';\n        }\n        return direction;\n    };\n\n    /**\n\t * Updates our plugin with the next slide number\n\t * @params\tobject\tevent\n\t * @params\tstring\tanimation direction\n\t * @returns boolean continue to animate?\n\t *\n\t */\n    RealBigSlider.prototype._next = function( e, direction ) {\n\n        // If the event was triggered by a slide indicator, we store the data-index value of that indicator\n        var index = ( typeof e !== 'undefined' ? $( e.currentTarget ).data( 'index' ) : undefined );\n\n        //Logic for determining the next slide\n        switch( true ) {\n                //If the event was triggered by an indicator, we set the next slide based on index\n            case( typeof index !== 'undefined' ):\n                if ( this.currSlide == index ) {\n                    this.startTimer();\n                    return false;\n                }\n                this.currSlide = index;\n                break;\n            case( direction == 'right' && this.currSlide < ( this.totalSlides - 1 ) ):\n                this.currSlide++;\n                break;\n            case( direction == 'right' ):\n                this.currSlide = 0;\n                break;\n            case( direction == 'left' && this.currSlide === 0 ):\n                this.currSlide = ( this.totalSlides - 1 );\n                break;\n            case( direction == 'left' ):\n                this.currSlide--;\n                break;\n        }\n        return true;\n    };\n\n    /**\n\t * Executes the animation via CSS transitions\n\t * @params\tobject\tJquery object the next slide to slide into view\n\t * @params\tstring\tanimation direction\n\t * @returns void\n\t *\n\t */\n    RealBigSlider.prototype._cssAnimation = function( $nextSlide, direction ) {\n        //Init CSS transitions\n        setTimeout( function() {\n            this.$el.addClass( 'transition' );\n            this.addCSSDuration();\n            this.$currSlide.addClass( 'shift-'+direction );\n        }.bind( this ), 100 );\n\n        //CSS Animation Callback\n        //After the animation has played out, remove CSS transitions\n        //Remove unnecessary classes\n        //Start timer\n        setTimeout( function() {\n            this.$el.removeClass( 'transition' );\n            this.removeCSSDuration();\n            this.$currSlide.removeClass( 'active shift-left shift-right' );\n            this.$currSlide = $nextSlide.removeClass( direction );\n            this._updateIndicators();\n            this.startTimer();\n        }.bind( this ), 100 + this.settings.speed );\n    };\n\n    /**\n\t * Executes the animation via JS transitions\n\t * @params\tobject\tJquery object the next slide to slide into view\n\t * @params\tstring\tanimation direction\n\t * @returns void\n\t *\n\t */\n    RealBigSlider.prototype._jsAnimation = function( $nextSlide, direction ) {\n        //Cache this reference for use inside animate functions\n        var _ = this;\n\n        // See CSS for explanation of .js-reset-left\n        if( direction == 'right' ) _.$currSlide.addClass( 'js-reset-left' );\n\n        var animation = {};\n        animation[direction] = '0%';\n\n        var animationPrev = {};\n        animationPrev[direction] = '100%';\n\n        //Animation: Current slide\n        this.$currSlide.animate( animationPrev, this.settings.speed );\n\n        //Animation: Next slide\n        $nextSlide.animate( animation, this.settings.speed, 'swing', function() {\n            //Get rid of any JS animation residue\n            _.$currSlide.removeClass( 'active js-reset-left' ).attr( 'style', '' );\n            //Cache the next slide after classes and inline styles have been removed\n            _.$currSlide = $nextSlide.removeClass( direction ).attr( 'style', '' );\n            _._updateIndicators();\n            _.startTimer();\n        } );\n    };\n\n    /**\n\t * Ensures the slide indicators are pointing to the currently active slide\n\t * @params\tvoid\n\t * @returns\tvoid\n\t *\n\t */\n    RealBigSlider.prototype._updateIndicators = function() {\n        this.$el.find( '.indicators li' ).removeClass( 'active' ).eq( this.currSlide ).addClass( 'active' );\n    };\n\n    /**\n\t * Initialize the plugin once for each DOM object passed to jQuery\n\t * @params\tobject\toptions object\n\t * @returns void\n\t *\n\t */\n    $.fn.RealBigSlider = function( options ) {\n\n        return this.each( function( index, el ) {\n\n            el.RealBigSlider = new RealBigSlider( el, options );\n\n        } );\n\n    };\n\n\n}( jQuery ) );","!function($) {\n\"use strict\";\n\nvar FOUNDATION_VERSION = '6.1.2';\n\n// Global Foundation object\n// This is attached to the window, or used as a module for AMD/Browserify\nvar Foundation = {\n  version: FOUNDATION_VERSION,\n\n  /**\n   * Stores initialized plugins.\n   */\n  _plugins: {},\n\n  /**\n   * Stores generated unique ids for plugin instances\n   */\n  _uuids: [],\n\n  /**\n   * Returns a boolean for RTL support\n   */\n  rtl: function(){\n    return $('html').attr('dir') === 'rtl';\n  },\n  /**\n   * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n   * @param {Object} plugin - The constructor of the plugin.\n   */\n  plugin: function(plugin, name) {\n    // Object key to use when adding to global Foundation object\n    // Examples: Foundation.Reveal, Foundation.OffCanvas\n    var className = (name || functionName(plugin));\n    // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n    // Examples: data-reveal, data-off-canvas\n    var attrName  = hyphenate(className);\n\n    // Add to the Foundation object and the plugins list (for reflowing)\n    this._plugins[attrName] = this[className] = plugin;\n  },\n  /**\n   * @function\n   * Populates the _uuids array with pointers to each individual plugin instance.\n   * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n   * Also fires the initialization event for each plugin, consolidating repeditive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @param {String} name - the name of the plugin, passed as a camelCased string.\n   * @fires Plugin#init\n   */\n  registerPlugin: function(plugin, name){\n    var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n    plugin.uuid = this.GetYoDigits(6, pluginName);\n\n    if(!plugin.$element.attr('data-' + pluginName)){ plugin.$element.attr('data-' + pluginName, plugin.uuid); }\n    if(!plugin.$element.data('zfPlugin')){ plugin.$element.data('zfPlugin', plugin); }\n          /**\n           * Fires when the plugin has initialized.\n           * @event Plugin#init\n           */\n    plugin.$element.trigger('init.zf.' + pluginName);\n\n    this._uuids.push(plugin.uuid);\n\n    return;\n  },\n  /**\n   * @function\n   * Removes the plugins uuid from the _uuids array.\n   * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n   * Also fires the destroyed event for the plugin, consolidating repeditive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @fires Plugin#destroyed\n   */\n  unregisterPlugin: function(plugin){\n    var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n    this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n    plugin.$element.removeAttr('data-' + pluginName).removeData('zfPlugin')\n          /**\n           * Fires when the plugin has been destroyed.\n           * @event Plugin#destroyed\n           */\n          .trigger('destroyed.zf.' + pluginName);\n    for(var prop in plugin){\n      plugin[prop] = null;//clean up script to prep for garbage collection.\n    }\n    return;\n  },\n\n  /**\n   * @function\n   * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n   * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n   * @default If no argument is passed, reflow all currently active plugins.\n   */\n   reInit: function(plugins){\n     var isJQ = plugins instanceof $;\n     try{\n       if(isJQ){\n         plugins.each(function(){\n           $(this).data('zfPlugin')._init();\n         });\n       }else{\n         var type = typeof plugins,\n         _this = this,\n         fns = {\n           'object': function(plgs){\n             plgs.forEach(function(p){\n               $('[data-'+ p +']').foundation('_init');\n             });\n           },\n           'string': function(){\n             $('[data-'+ plugins +']').foundation('_init');\n           },\n           'undefined': function(){\n             this['object'](Object.keys(_this._plugins));\n           }\n         };\n         fns[type](plugins);\n       }\n     }catch(err){\n       console.error(err);\n     }finally{\n       return plugins;\n     }\n   },\n\n  /**\n   * returns a random base-36 uid with namespacing\n   * @function\n   * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n   * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n   * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n   * @returns {String} - unique id\n   */\n  GetYoDigits: function(length, namespace){\n    length = length || 6;\n    return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1) + (namespace ? '-' + namespace : '');\n  },\n  /**\n   * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n   * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n   * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n   */\n  reflow: function(elem, plugins) {\n\n    // If plugins is undefined, just grab everything\n    if (typeof plugins === 'undefined') {\n      plugins = Object.keys(this._plugins);\n    }\n    // If plugins is a string, convert it to an array with one item\n    else if (typeof plugins === 'string') {\n      plugins = [plugins];\n    }\n\n    var _this = this;\n\n    // Iterate through each plugin\n    $.each(plugins, function(i, name) {\n      // Get the current plugin\n      var plugin = _this._plugins[name];\n\n      // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n      var $elem = $(elem).find('[data-'+name+']').addBack('[data-'+name+']');\n\n      // For each plugin found, initialize it\n      $elem.each(function() {\n        var $el = $(this),\n            opts = {};\n        // Don't double-dip on plugins\n        if ($el.data('zfPlugin')) {\n          console.warn(\"Tried to initialize \"+name+\" on an element that already has a Foundation plugin.\");\n          return;\n        }\n\n        if($el.attr('data-options')){\n          var thing = $el.attr('data-options').split(';').forEach(function(e, i){\n            var opt = e.split(':').map(function(el){ return el.trim(); });\n            if(opt[0]) opts[opt[0]] = parseValue(opt[1]);\n          });\n        }\n        try{\n          $el.data('zfPlugin', new plugin($(this), opts));\n        }catch(er){\n          console.error(er);\n        }finally{\n          return;\n        }\n      });\n    });\n  },\n  getFnName: functionName,\n  transitionend: function($elem){\n    var transitions = {\n      'transition': 'transitionend',\n      'WebkitTransition': 'webkitTransitionEnd',\n      'MozTransition': 'transitionend',\n      'OTransition': 'otransitionend'\n    };\n    var elem = document.createElement('div'),\n        end;\n\n    for (var t in transitions){\n      if (typeof elem.style[t] !== 'undefined'){\n        end = transitions[t];\n      }\n    }\n    if(end){\n      return end;\n    }else{\n      end = setTimeout(function(){\n        $elem.triggerHandler('transitionend', [$elem]);\n      }, 1);\n      return 'transitionend';\n    }\n  }\n};\n\n\nFoundation.util = {\n  /**\n   * Function for applying a debounce effect to a function call.\n   * @function\n   * @param {Function} func - Function to be called at end of timeout.\n   * @param {Number} delay - Time in ms to delay the call of `func`.\n   * @returns function\n   */\n  throttle: function (func, delay) {\n    var timer = null;\n\n    return function () {\n      var context = this, args = arguments;\n\n      if (timer === null) {\n        timer = setTimeout(function () {\n          func.apply(context, args);\n          timer = null;\n        }, delay);\n      }\n    };\n  }\n};\n\n// TODO: consider not making this a jQuery function\n// TODO: need way to reflow vs. re-initialize\n/**\n * The Foundation jQuery method.\n * @param {String|Array} method - An action to perform on the current jQuery object.\n */\nvar foundation = function(method) {\n  var type = typeof method,\n      $meta = $('meta.foundation-mq'),\n      $noJS = $('.no-js');\n\n  if(!$meta.length){\n    $('<meta class=\"foundation-mq\">').appendTo(document.head);\n  }\n  if($noJS.length){\n    $noJS.removeClass('no-js');\n  }\n\n  if(type === 'undefined'){//needs to initialize the Foundation object, or an individual plugin.\n    Foundation.MediaQuery._init();\n    Foundation.reflow(this);\n  }else if(type === 'string'){//an individual method to invoke on a plugin or group of plugins\n    var args = Array.prototype.slice.call(arguments, 1);//collect all the arguments, if necessary\n    var plugClass = this.data('zfPlugin');//determine the class of plugin\n\n    if(plugClass !== undefined && plugClass[method] !== undefined){//make sure both the class and method exist\n      if(this.length === 1){//if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n      }else{\n        this.each(function(i, el){//otherwise loop through the jQuery collection and invoke the method on each\n          plugClass[method].apply($(el).data('zfPlugin'), args);\n        });\n      }\n    }else{//error for no class or no method\n      throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n    }\n  }else{//error for invalid argument type\n    throw new TypeError(\"We're sorry, '\" + type + \"' is not a valid parameter. You must use a string representing the method you wish to invoke.\");\n  }\n  return this;\n};\n\nwindow.Foundation = Foundation;\n$.fn.foundation = foundation;\n\n// Polyfill for requestAnimationFrame\n(function() {\n  if (!Date.now || !window.Date.now)\n    window.Date.now = Date.now = function() { return new Date().getTime(); };\n\n  var vendors = ['webkit', 'moz'];\n  for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp+'RequestAnimationFrame'];\n      window.cancelAnimationFrame = (window[vp+'CancelAnimationFrame']\n                                 || window[vp+'CancelRequestAnimationFrame']);\n  }\n  if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)\n    || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    window.requestAnimationFrame = function(callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function() { callback(lastTime = nextTime); },\n                          nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n  }\n  /**\n   * Polyfill for performance.now, required by rAF\n   */\n  if(!window.performance || !window.performance.now){\n    window.performance = {\n      start: Date.now(),\n      now: function(){ return Date.now() - this.start; }\n    };\n  }\n})();\nif (!Function.prototype.bind) {\n  Function.prototype.bind = function(oThis) {\n    if (typeof this !== 'function') {\n      // closest thing possible to the ECMAScript 5\n      // internal IsCallable function\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n    }\n\n    var aArgs   = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP    = function() {},\n        fBound  = function() {\n          return fToBind.apply(this instanceof fNOP\n                 ? this\n                 : oThis,\n                 aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n    if (this.prototype) {\n      // native functions don't have a prototype\n      fNOP.prototype = this.prototype;\n    }\n    fBound.prototype = new fNOP();\n\n    return fBound;\n  };\n}\n// Polyfill to get the name of a function in IE9\nfunction functionName(fn) {\n  if (Function.prototype.name === undefined) {\n    var funcNameRegex = /function\\s([^(]{1,})\\(/;\n    var results = (funcNameRegex).exec((fn).toString());\n    return (results && results.length > 1) ? results[1].trim() : \"\";\n  }\n  else if (fn.prototype === undefined) {\n    return fn.constructor.name;\n  }\n  else {\n    return fn.prototype.constructor.name;\n  }\n}\nfunction parseValue(str){\n  if(/true/.test(str)) return true;\n  else if(/false/.test(str)) return false;\n  else if(!isNaN(str * 1)) return parseFloat(str);\n  return str;\n}\n// Convert PascalCase to kebab-case\n// Thank you: http://stackoverflow.com/a/8955580\nfunction hyphenate(str) {\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\n}(jQuery);\n","/*******************************************\n *                                         *\n * This util was created by Marius Olbertz *\n * Please thank Marius on GitHub /owlbertz *\n * or the web http://www.mariusolbertz.de/ *\n *                                         *\n ******************************************/\n!function($, Foundation){\n  'use strict';\n  Foundation.Keyboard = {};\n\n  var keyCodes = {\n    9: 'TAB',\n    13: 'ENTER',\n    27: 'ESCAPE',\n    32: 'SPACE',\n    37: 'ARROW_LEFT',\n    38: 'ARROW_UP',\n    39: 'ARROW_RIGHT',\n    40: 'ARROW_DOWN'\n  };\n\n  /*\n   * Constants for easier comparing.\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n   */\n  var keys = (function(kcs) {\n    var k = {};\n    for (var kc in kcs) k[kcs[kc]] = kcs[kc];\n    return k;\n  })(keyCodes);\n\n  Foundation.Keyboard.keys = keys;\n\n  /**\n   * Parses the (keyboard) event and returns a String that represents its key\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n   * @param {Event} event - the event generated by the event handler\n   * @return String key - String that represents the key pressed\n   */\n  var parseKey = function(event) {\n    var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\n    if (event.shiftKey) key = 'SHIFT_' + key;\n    if (event.ctrlKey) key = 'CTRL_' + key;\n    if (event.altKey) key = 'ALT_' + key;\n    return key;\n  };\n  Foundation.Keyboard.parseKey = parseKey;\n\n\n  // plain commands per component go here, ltr and rtl are merged based on orientation\n  var commands = {};\n\n  /**\n   * Handles the given (keyboard) event\n   * @param {Event} event - the event generated by the event handler\n   * @param {String} component - Foundation component's name, e.g. Slider or Reveal\n   * @param {Objects} functions - collection of functions that are to be executed\n   */\n  var handleKey = function(event, component, functions) {\n    var commandList = commands[component],\n      keyCode = parseKey(event),\n      cmds,\n      command,\n      fn;\n    if (!commandList) return console.warn('Component not defined!');\n\n    if (typeof commandList.ltr === 'undefined') { // this component does not differentiate between ltr and rtl\n        cmds = commandList; // use plain list\n    } else { // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\n        if (Foundation.rtl()) cmds = $.extend({}, commandList.ltr, commandList.rtl);\n\n        else cmds = $.extend({}, commandList.rtl, commandList.ltr);\n    }\n    command = cmds[keyCode];\n\n\n    fn = functions[command];\n    if (fn && typeof fn === 'function') { // execute function  if exists\n        fn.apply();\n        if (functions.handled || typeof functions.handled === 'function') { // execute function when event was handled\n            functions.handled.apply();\n        }\n    } else {\n        if (functions.unhandled || typeof functions.unhandled === 'function') { // execute function when event was not handled\n            functions.unhandled.apply();\n        }\n    }\n  };\n  Foundation.Keyboard.handleKey = handleKey;\n\n  /**\n   * Finds all focusable elements within the given `$element`\n   * @param {jQuery} $element - jQuery object to search within\n   * @return {jQuery} $focusable - all focusable elements within `$element`\n   */\n  var findFocusable = function($element) {\n    return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function() {\n      if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) { return false; } //only have visible elements and those that have a tabindex greater or equal 0\n      return true;\n    });\n  };\n  Foundation.Keyboard.findFocusable = findFocusable;\n\n  /**\n   * Returns the component name name\n   * @param {Object} component - Foundation component, e.g. Slider or Reveal\n   * @return String componentName\n   */\n\n  var register = function(componentName, cmds) {\n    commands[componentName] = cmds;\n  };\n  Foundation.Keyboard.register = register;\n}(jQuery, window.Foundation);\n","!function(Foundation, window){\n  /**\n   * Compares the dimensions of an element to a container and determines collision events with container.\n   * @function\n   * @param {jQuery} element - jQuery object to test for collisions.\n   * @param {jQuery} parent - jQuery object to use as bounding container.\n   * @param {Boolean} lrOnly - set to true to check left and right values only.\n   * @param {Boolean} tbOnly - set to true to check top and bottom values only.\n   * @default if no parent object passed, detects collisions with `window`.\n   * @returns {Boolean} - true if collision free, false if a collision in any direction.\n   */\n  var ImNotTouchingYou = function(element, parent, lrOnly, tbOnly){\n    var eleDims = GetDimensions(element),\n        top, bottom, left, right;\n\n    if(parent){\n      var parDims = GetDimensions(parent);\n\n      bottom = (eleDims.offset.top + eleDims.height <= parDims.height + parDims.offset.top);\n      top    = (eleDims.offset.top >= parDims.offset.top);\n      left   = (eleDims.offset.left >= parDims.offset.left);\n      right  = (eleDims.offset.left + eleDims.width <= parDims.width);\n    }else{\n      bottom = (eleDims.offset.top + eleDims.height <= eleDims.windowDims.height + eleDims.windowDims.offset.top);\n      top    = (eleDims.offset.top >= eleDims.windowDims.offset.top);\n      left   = (eleDims.offset.left >= eleDims.windowDims.offset.left);\n      right  = (eleDims.offset.left + eleDims.width <= eleDims.windowDims.width);\n    }\n    var allDirs = [bottom, top, left, right];\n\n    if(lrOnly){ return left === right === true; }\n    if(tbOnly){ return top === bottom === true; }\n\n    return allDirs.indexOf(false) === -1;\n  };\n\n  /**\n   * Uses native methods to return an object of dimension values.\n   * @function\n   * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\n   * @returns {Object} - nested object of integer pixel values\n   * TODO - if element is window, return only those values.\n   */\n  var GetDimensions = function(elem, test){\n    elem = elem.length ? elem[0] : elem;\n\n    if(elem === window || elem === document){ throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\"); }\n\n    var rect = elem.getBoundingClientRect(),\n        parRect = elem.parentNode.getBoundingClientRect(),\n        winRect = document.body.getBoundingClientRect(),\n        winY = window.pageYOffset,\n        winX = window.pageXOffset;\n\n    return {\n      width: rect.width,\n      height: rect.height,\n      offset: {\n        top: rect.top + winY,\n        left: rect.left + winX\n      },\n      parentDims: {\n        width: parRect.width,\n        height: parRect.height,\n        offset: {\n          top: parRect.top + winY,\n          left: parRect.left + winX\n        }\n      },\n      windowDims: {\n        width: winRect.width,\n        height: winRect.height,\n        offset: {\n          top: winY,\n          left: winX\n        }\n      }\n    };\n  };\n  /**\n   * Returns an object of top and left integer pixel values for dynamically rendered elements,\n   * such as: Tooltip, Reveal, and Dropdown\n   * @function\n   * @param {jQuery} element - jQuery object for the element being positioned.\n   * @param {jQuery} anchor - jQuery object for the element's anchor point.\n   * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\n   * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\n   * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\n   * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\n   * TODO alter/rewrite to work with `em` values as well/instead of pixels\n   */\n  var GetOffsets = function(element, anchor, position, vOffset, hOffset, isOverflow){\n    var $eleDims = GetDimensions(element),\n    // var $eleDims = GetDimensions(element),\n        $anchorDims = anchor ? GetDimensions(anchor) : null;\n        // $anchorDims = anchor ? GetDimensions(anchor) : null;\n    switch(position){\n      case 'top':\n        return {\n          left: $anchorDims.offset.left,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset,\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'center top':\n        return {\n          left: ($anchorDims.offset.left + ($anchorDims.width / 2)) - ($eleDims.width / 2),\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'center bottom':\n        return {\n          left: isOverflow ? hOffset : (($anchorDims.offset.left + ($anchorDims.width / 2)) - ($eleDims.width / 2)),\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n        break;\n      case 'center left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: ($anchorDims.offset.top + ($anchorDims.height / 2)) - ($eleDims.height / 2)\n        };\n        break;\n      case 'center right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset + 1,\n          top: ($anchorDims.offset.top + ($anchorDims.height / 2)) - ($eleDims.height / 2)\n        };\n        break;\n      case 'center':\n        return {\n          left: ($eleDims.windowDims.offset.left + ($eleDims.windowDims.width / 2)) - ($eleDims.width / 2),\n          top: ($eleDims.windowDims.offset.top + ($eleDims.windowDims.height / 2)) - ($eleDims.height / 2)\n        };\n        break;\n      case 'reveal':\n        return {\n          left: ($eleDims.windowDims.width - $eleDims.width) / 2,\n          top: $eleDims.windowDims.offset.top + vOffset\n        };\n      case 'reveal full':\n        return {\n          left: $eleDims.windowDims.offset.left,\n          top: $eleDims.windowDims.offset.top\n        };\n        break;\n      default:\n        return {\n          left: $anchorDims.offset.left,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n    }\n  };\n  Foundation.Box = {\n    ImNotTouchingYou: ImNotTouchingYou,\n    GetDimensions: GetDimensions,\n    GetOffsets: GetOffsets\n  };\n}(window.Foundation, window);\n","!function($, Foundation){\n  'use strict';\n  Foundation.Nest = {\n    Feather: function(menu, type){\n      menu.attr('role', 'menubar');\n      type = type || 'zf';\n      var items = menu.find('li').attr({'role': 'menuitem'}),\n          subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n      menu.find('a:first').attr('tabindex', 0);\n      items.each(function(){\n        var $item = $(this),\n            $sub = $item.children('ul');\n        if($sub.length){\n          $item.addClass(hasSubClass)\n               .attr({\n                 'aria-haspopup': true,\n                 'aria-expanded': false,\n                 'aria-label': $item.children('a:first').text()\n               });\n          $sub.addClass('submenu ' + subMenuClass)\n              .attr({\n                'data-submenu': '',\n                'aria-hidden': true,\n                'role': 'menu'\n              });\n        }\n        if($item.parent('[data-submenu]').length){\n          $item.addClass('is-submenu-item ' + subItemClass);\n        }\n      });\n      return;\n    },\n    Burn: function(menu, type){\n      var items = menu.find('li').removeAttr('tabindex'),\n          subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      // menu.find('.is-active').removeClass('is-active');\n      menu.find('*')\n      // menu.find('.' + subMenuClass + ', .' + subItemClass + ', .is-active, .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\n          .removeClass(subMenuClass + ' ' + subItemClass + ' ' + hasSubClass + ' is-submenu-item submenu is-active')\n          .removeAttr('data-submenu').css('display', '');\n\n      // console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\n      //           .removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')\n      //           .removeAttr('data-submenu'));\n      // items.each(function(){\n      //   var $item = $(this),\n      //       $sub = $item.children('ul');\n      //   if($item.parent('[data-submenu]').length){\n      //     $item.removeClass('is-submenu-item ' + subItemClass);\n      //   }\n      //   if($sub.length){\n      //     $item.removeClass('has-submenu');\n      //     $sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');\n      //   }\n      // });\n    }\n  };\n}(jQuery, window.Foundation);\n","!function($, Foundation) {\n\n// Default set of media queries\nvar defaultQueries = {\n  'default' : 'only screen',\n  landscape : 'only screen and (orientation: landscape)',\n  portrait : 'only screen and (orientation: portrait)',\n  retina : 'only screen and (-webkit-min-device-pixel-ratio: 2),' +\n    'only screen and (min--moz-device-pixel-ratio: 2),' +\n    'only screen and (-o-min-device-pixel-ratio: 2/1),' +\n    'only screen and (min-device-pixel-ratio: 2),' +\n    'only screen and (min-resolution: 192dpi),' +\n    'only screen and (min-resolution: 2dppx)'\n};\n\nvar MediaQuery = {\n  queries: [],\n  current: '',\n\n  /**\n   * Checks if the screen is at least as wide as a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to check.\n   * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\n   */\n  atLeast: function(size) {\n    var query = this.get(size);\n\n    if (query) {\n      return window.matchMedia(query).matches;\n    }\n\n    return false;\n  },\n\n  /**\n   * Gets the media query of a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to get.\n   * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\n   */\n  get: function(size) {\n    for (var i in this.queries) {\n      var query = this.queries[i];\n      if (size === query.name) return query.value;\n    }\n\n    return null;\n  },\n\n  /**\n   * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\n   * @function\n   * @private\n   */\n  _init: function() {\n    var self = this;\n    var extractedStyles = $('.foundation-mq').css('font-family');\n    var namedQueries;\n\n    namedQueries = parseStyleToObject(extractedStyles);\n\n    for (var key in namedQueries) {\n      self.queries.push({\n        name: key,\n        value: 'only screen and (min-width: ' + namedQueries[key] + ')'\n      });\n    }\n\n    this.current = this._getCurrentSize();\n\n    this._watcher();\n\n    // Extend default queries\n    // namedQueries = $.extend(defaultQueries, namedQueries);\n  },\n\n  /**\n   * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n   * @function\n   * @private\n   * @returns {String} Name of the current breakpoint.\n   */\n  _getCurrentSize: function() {\n    var matched;\n\n    for (var i in this.queries) {\n      var query = this.queries[i];\n\n      if (window.matchMedia(query.value).matches) {\n        matched = query;\n      }\n    }\n\n    if(typeof matched === 'object') {\n      return matched.name;\n    } else {\n      return matched;\n    }\n  },\n\n  /**\n   * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\n   * @function\n   * @private\n   */\n  _watcher: function() {\n    var _this = this;\n\n    $(window).on('resize.zf.mediaquery', function() {\n      var newSize = _this._getCurrentSize();\n\n      if (newSize !== _this.current) {\n        // Broadcast the media query change on the window\n        $(window).trigger('changed.zf.mediaquery', [newSize, _this.current]);\n\n        // Change the current media query\n        _this.current = newSize;\n      }\n    });\n  }\n};\n\nFoundation.MediaQuery = MediaQuery;\n\n// matchMedia() polyfill - Test a CSS media type/query in JS.\n// Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\nwindow.matchMedia || (window.matchMedia = function() {\n  'use strict';\n\n  // For browsers that support matchMedium api such as IE 9 and webkit\n  var styleMedia = (window.styleMedia || window.media);\n\n  // For those that don't support matchMedium\n  if (!styleMedia) {\n    var style   = document.createElement('style'),\n    script      = document.getElementsByTagName('script')[0],\n    info        = null;\n\n    style.type  = 'text/css';\n    style.id    = 'matchmediajs-test';\n\n    script.parentNode.insertBefore(style, script);\n\n    // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n    info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\n\n    styleMedia = {\n      matchMedium: function(media) {\n        var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n        // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n        if (style.styleSheet) {\n          style.styleSheet.cssText = text;\n        } else {\n          style.textContent = text;\n        }\n\n        // Test if media query is true or false\n        return info.width === '1px';\n      }\n    };\n  }\n\n  return function(media) {\n    return {\n      matches: styleMedia.matchMedium(media || 'all'),\n      media: media || 'all'\n    };\n  };\n}());\n\n// Thank you: https://github.com/sindresorhus/query-string\nfunction parseStyleToObject(str) {\n  var styleObject = {};\n\n  if (typeof str !== 'string') {\n    return styleObject;\n  }\n\n  str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n  if (!str) {\n    return styleObject;\n  }\n\n  styleObject = str.split('&').reduce(function(ret, param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = parts[0];\n    var val = parts[1];\n    key = decodeURIComponent(key);\n\n    // missing `=` should be `null`:\n    // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n    val = val === undefined ? null : decodeURIComponent(val);\n\n    if (!ret.hasOwnProperty(key)) {\n      ret[key] = val;\n    } else if (Array.isArray(ret[key])) {\n      ret[key].push(val);\n    } else {\n      ret[key] = [ret[key], val];\n    }\n    return ret;\n  }, {});\n\n  return styleObject;\n}\n\n}(jQuery, Foundation);\n","!function(Foundation, $) {\n  'use strict';\n  // Elements with [data-open] will reveal a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-open]', function() {\n    var id = $(this).data('open');\n    $('#' + id).triggerHandler('open.zf.trigger', [$(this)]);\n  });\n\n  // Elements with [data-close] will close a plugin that supports it when clicked.\n  // If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\n  $(document).on('click.zf.trigger', '[data-close]', function() {\n    var id = $(this).data('close');\n    if (id) {\n      $('#' + id).triggerHandler('close.zf.trigger', [$(this)]);\n    }\n    else {\n      $(this).trigger('close.zf.trigger');\n    }\n  });\n\n  // Elements with [data-toggle] will toggle a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-toggle]', function() {\n    var id = $(this).data('toggle');\n    $('#' + id).triggerHandler('toggle.zf.trigger', [$(this)]);\n  });\n\n  // Elements with [data-closable] will respond to close.zf.trigger events.\n  $(document).on('close.zf.trigger', '[data-closable]', function(e){\n    e.stopPropagation();\n    var animation = $(this).data('closable');\n\n    if(animation !== ''){\n      Foundation.Motion.animateOut($(this), animation, function() {\n        $(this).trigger('closed.zf');\n      });\n    }else{\n      $(this).fadeOut().trigger('closed.zf');\n    }\n  });\n\n  var MutationObserver = (function () {\n    var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n    for (var i=0; i < prefixes.length; i++) {\n      if (prefixes[i] + 'MutationObserver' in window) {\n        return window[prefixes[i] + 'MutationObserver'];\n      }\n    }\n    return false;\n  }());\n\n\n  var checkListeners = function(){\n    eventsListener();\n    resizeListener();\n    scrollListener();\n    closemeListener();\n  };\n  /**\n  * Fires once after all other scripts have loaded\n  * @function\n  * @private\n  */\n  $(window).load(function(){\n    checkListeners();\n  });\n\n  //******** only fires this function once on load, if there's something to watch ********\n  var closemeListener = function(pluginName){\n    var yetiBoxes = $('[data-yeti-box]'),\n        plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n    if(pluginName){\n      if(typeof pluginName === 'string'){\n        plugNames.push(pluginName);\n      }else if(typeof pluginName === 'object' && typeof pluginName[0] === 'string'){\n        plugNames.concat(pluginName);\n      }else{\n        console.error('Plugin names must be strings');\n      }\n    }\n    if(yetiBoxes.length){\n      var listeners = plugNames.map(function(name){\n        return 'closeme.zf.' + name;\n      }).join(' ');\n\n      $(window).off(listeners).on(listeners, function(e, pluginId){\n        var plugin = e.namespace.split('.')[0];\n        var plugins = $('[data-' + plugin + ']').not('[data-yeti-box=\"' + pluginId + '\"]');\n\n        plugins.each(function(){\n          var _this = $(this);\n\n          _this.triggerHandler('close.zf.trigger', [_this]);\n        });\n      });\n    }\n  };\n  var resizeListener = function(debounce){\n    var timer,\n        $nodes = $('[data-resize]');\n    if($nodes.length){\n      $(window).off('resize.zf.trigger')\n      .on('resize.zf.trigger', function(e) {\n        if (timer) { clearTimeout(timer); }\n\n        timer = setTimeout(function(){\n\n          if(!MutationObserver){//fallback for IE 9\n            $nodes.each(function(){\n              $(this).triggerHandler('resizeme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a resize event\n          $nodes.attr('data-events', \"resize\");\n        }, debounce || 10);//default time to emit resize event\n      });\n    }\n  };\n  var scrollListener = function(debounce){\n    var timer,\n        $nodes = $('[data-scroll]');\n    if($nodes.length){\n      $(window).off('scroll.zf.trigger')\n      .on('scroll.zf.trigger', function(e){\n        if(timer){ clearTimeout(timer); }\n\n        timer = setTimeout(function(){\n\n          if(!MutationObserver){//fallback for IE 9\n            $nodes.each(function(){\n              $(this).triggerHandler('scrollme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a scroll event\n          $nodes.attr('data-events', \"scroll\");\n        }, debounce || 10);//default time to emit scroll event\n      });\n    }\n  };\n  // function domMutationObserver(debounce) {\n  //   // !!! This is coming soon and needs more work; not active  !!! //\n  //   var timer,\n  //   nodes = document.querySelectorAll('[data-mutate]');\n  //   //\n  //   if (nodes.length) {\n  //     // var MutationObserver = (function () {\n  //     //   var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n  //     //   for (var i=0; i < prefixes.length; i++) {\n  //     //     if (prefixes[i] + 'MutationObserver' in window) {\n  //     //       return window[prefixes[i] + 'MutationObserver'];\n  //     //     }\n  //     //   }\n  //     //   return false;\n  //     // }());\n  //\n  //\n  //     //for the body, we need to listen for all changes effecting the style and class attributes\n  //     var bodyObserver = new MutationObserver(bodyMutation);\n  //     bodyObserver.observe(document.body, { attributes: true, childList: true, characterData: false, subtree:true, attributeFilter:[\"style\", \"class\"]});\n  //\n  //\n  //     //body callback\n  //     function bodyMutation(mutate) {\n  //       //trigger all listening elements and signal a mutation event\n  //       if (timer) { clearTimeout(timer); }\n  //\n  //       timer = setTimeout(function() {\n  //         bodyObserver.disconnect();\n  //         $('[data-mutate]').attr('data-events',\"mutate\");\n  //       }, debounce || 150);\n  //     }\n  //   }\n  // }\n  var eventsListener = function() {\n    if(!MutationObserver){ return false; }\n    var nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\n\n    //element callback\n    var listeningElementsMutation = function(mutationRecordsList) {\n      var $target = $(mutationRecordsList[0].target);\n      //trigger the event handler for the element depending on type\n      switch ($target.attr(\"data-events\")) {\n\n        case \"resize\" :\n        $target.triggerHandler('resizeme.zf.trigger', [$target]);\n        break;\n\n        case \"scroll\" :\n        $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n        break;\n\n        // case \"mutate\" :\n        // console.log('mutate', $target);\n        // $target.triggerHandler('mutate.zf.trigger');\n        //\n        // //make sure we don't get stuck in an infinite loop from sloppy codeing\n        // if ($target.index('[data-mutate]') == $(\"[data-mutate]\").length-1) {\n        //   domMutationObserver();\n        // }\n        // break;\n\n        default :\n        return false;\n        //nothing\n      }\n    }\n\n    if(nodes.length){\n      //for each element that needs to listen for resizing, scrolling, (or coming soon mutation) add a single observer\n      for (var i = 0; i <= nodes.length-1; i++) {\n        var elementObserver = new MutationObserver(listeningElementsMutation);\n        elementObserver.observe(nodes[i], { attributes: true, childList: false, characterData: false, subtree:false, attributeFilter:[\"data-events\"]});\n      }\n    }\n  };\n  // ------------------------------------\n\n  // [PH]\n  // Foundation.CheckWatchers = checkWatchers;\n  Foundation.IHearYou = checkListeners;\n  // Foundation.ISeeYou = scrollListener;\n  // Foundation.IFeelYou = closemeListener;\n\n}(window.Foundation, window.jQuery);\n","/**\n * Motion module.\n * @module foundation.motion\n */\n!function($, Foundation) {\n\nvar initClasses   = ['mui-enter', 'mui-leave'];\nvar activeClasses = ['mui-enter-active', 'mui-leave-active'];\n\nfunction animate(isIn, element, animation, cb) {\n  element = $(element).eq(0);\n\n  if (!element.length) return;\n\n  var initClass = isIn ? initClasses[0] : initClasses[1];\n  var activeClass = isIn ? activeClasses[0] : activeClasses[1];\n\n  // Set up the animation\n  reset();\n  element.addClass(animation)\n         .css('transition', 'none');\n        //  .addClass(initClass);\n  // if(isIn) element.show();\n  requestAnimationFrame(function() {\n    element.addClass(initClass);\n    if (isIn) element.show();\n  });\n  // Start the animation\n  requestAnimationFrame(function() {\n    element[0].offsetWidth;\n    element.css('transition', '');\n    element.addClass(activeClass);\n  });\n  // Move(500, element, function(){\n  //   // element[0].offsetWidth;\n  //   element.css('transition', '');\n  //   element.addClass(activeClass);\n  // });\n\n  // Clean up the animation when it finishes\n  element.one(Foundation.transitionend(element), finish);//.one('finished.zf.animate', finish);\n\n  // Hides the element (for out animations), resets the element, and runs a callback\n  function finish() {\n    if (!isIn) element.hide();\n    reset();\n    if (cb) cb.apply(element);\n  }\n\n  // Resets transitions and removes motion-specific classes\n  function reset() {\n    element[0].style.transitionDuration = 0;\n    element.removeClass(initClass + ' ' + activeClass + ' ' + animation);\n  }\n}\n\nvar Motion = {\n  animateIn: function(element, animation, /*duration,*/ cb) {\n    animate(true, element, animation, cb);\n  },\n\n  animateOut: function(element, animation, /*duration,*/ cb) {\n    animate(false, element, animation, cb);\n  }\n};\n\nvar Move = function(duration, elem, fn){\n  var anim, prog, start = null;\n  // console.log('called');\n\n  function move(ts){\n    if(!start) start = window.performance.now();\n    // console.log(start, ts);\n    prog = ts - start;\n    fn.apply(elem);\n\n    if(prog < duration){ anim = window.requestAnimationFrame(move, elem); }\n    else{\n      window.cancelAnimationFrame(anim);\n      elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\n    }\n  }\n  anim = window.requestAnimationFrame(move);\n};\n\nFoundation.Move = Move;\nFoundation.Motion = Motion;\n\n}(jQuery, Foundation);\n","/**\n * DropdownMenu module.\n * @module foundation.dropdown-menu\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.nest\n */\n!function($, Foundation){\n  'use strict';\n\n  /**\n   * Creates a new instance of DropdownMenu.\n   * @class\n   * @fires DropdownMenu#init\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  function DropdownMenu(element, options){\n    this.$element = element;\n    this.options = $.extend({}, DropdownMenu.defaults, this.$element.data(), options);\n\n    Foundation.Nest.Feather(this.$element, 'dropdown');\n    this._init();\n\n    Foundation.registerPlugin(this, 'DropdownMenu');\n    Foundation.Keyboard.register('DropdownMenu', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ARROW_RIGHT': 'next',\n      'ARROW_UP': 'up',\n      'ARROW_DOWN': 'down',\n      'ARROW_LEFT': 'previous',\n      'ESCAPE': 'close'\n    });\n  }\n\n  /**\n   * Default settings for plugin\n   */\n  DropdownMenu.defaults = {\n    /**\n     * Disallows hover events from opening submenus\n     * @option\n     * @example false\n     */\n    disableHover: false,\n    /**\n     * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\n     * @option\n     * @example true\n     */\n    autoclose: true,\n    /**\n     * Amount of time to delay opening a submenu on hover event.\n     * @option\n     * @example 50\n     */\n    hoverDelay: 50,\n    /**\n     * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\n     * @option\n     * @example true\n     */\n    clickOpen: false,\n    /**\n     * Amount of time to delay closing a submenu on a mouseleave event.\n     * @option\n     * @example 500\n     */\n\n    closingTime: 500,\n    /**\n     * Position of the menu relative to what direction the submenus should open. Handled by JS.\n     * @option\n     * @example 'left'\n     */\n    alignment: 'left',\n    /**\n     * Allow clicks on the body to close any open submenus.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\n     * @option\n     * @example 'vertical'\n     */\n    verticalClass: 'vertical',\n    /**\n     * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\n     * @option\n     * @example 'align-right'\n     */\n    rightClass: 'align-right',\n    /**\n     * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\n     * @option\n     * @example false\n     */\n    forceFollow: true\n  };\n  /**\n   * Initializes the plugin, and calls _prepareMenu\n   * @private\n   * @function\n   */\n  DropdownMenu.prototype._init = function(){\n    var subs = this.$element.find('li.is-dropdown-submenu-parent');\n    this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');\n\n    this.$menuItems = this.$element.find('[role=\"menuitem\"]');\n    this.$tabs = this.$element.children('[role=\"menuitem\"]');\n    this.isVert = this.$element.hasClass(this.options.verticalClass);\n    this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);\n\n    if(this.$element.hasClass(this.options.rightClass) || this.options.alignment === 'right' || Foundation.rtl()){\n      this.options.alignment = 'right';\n      subs.addClass('is-left-arrow opens-left');\n    }else{\n      subs.addClass('is-right-arrow opens-right');\n    }\n    if(!this.isVert){\n      this.$tabs.filter('.is-dropdown-submenu-parent').removeClass('is-right-arrow is-left-arrow opens-right opens-left')\n          .addClass('is-down-arrow');\n    }\n    this.changed = false;\n    this._events();\n  };\n  /**\n   * Adds event listeners to elements within the menu\n   * @private\n   * @function\n   */\n  DropdownMenu.prototype._events = function(){\n    var _this = this,\n        hasTouch = 'ontouchstart' in window || (typeof window.ontouchstart !== 'undefined'),\n        parClass = 'is-dropdown-submenu-parent';\n\n    if(this.options.clickOpen || hasTouch){\n      this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu', function(e){\n        var $elem = $(e.target).parentsUntil('ul', '.' + parClass),\n            hasSub = $elem.hasClass(parClass),\n            hasClicked = $elem.attr('data-is-click') === 'true',\n            $sub = $elem.children('.is-dropdown-submenu');\n\n        if(hasSub){\n          if(hasClicked){\n            if(!_this.options.closeOnClick || (!_this.options.clickOpen && !hasTouch) || (_this.options.forceFollow && hasTouch)){ return; }\n            else{\n              e.stopImmediatePropagation();\n              e.preventDefault();\n              _this._hide($elem);\n            }\n          }else{\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            _this._show($elem.children('.is-dropdown-submenu'));\n            $elem.add($elem.parentsUntil(_this.$element, '.' + parClass)).attr('data-is-click', true);\n          }\n        }else{ return; }\n      });\n    }\n\n    if(!this.options.disableHover){\n      this.$menuItems.on('mouseenter.zf.dropdownmenu', function(e){\n        e.stopImmediatePropagation();\n        var $elem = $(this),\n            hasSub = $elem.hasClass(parClass);\n\n        if(hasSub){\n          clearTimeout(_this.delay);\n          _this.delay = setTimeout(function(){\n            _this._show($elem.children('.is-dropdown-submenu'));\n          }, _this.options.hoverDelay);\n        }\n      }).on('mouseleave.zf.dropdownmenu', function(e){\n        var $elem = $(this),\n            hasSub = $elem.hasClass(parClass);\n        if(hasSub && _this.options.autoclose){\n          if($elem.attr('data-is-click') === 'true' && _this.options.clickOpen){ return false; }\n\n          clearTimeout(_this.delay);\n          _this.delay = setTimeout(function(){\n            _this._hide($elem);\n          }, _this.options.closingTime);\n        }\n      });\n    }\n    this.$menuItems.on('keydown.zf.dropdownmenu', function(e){\n      var $element = $(e.target).parentsUntil('ul', '[role=\"menuitem\"]'),\n          isTab = _this.$tabs.index($element) > -1,\n          $elements = isTab ? _this.$tabs : $element.siblings('li').add($element),\n          $prevElement,\n          $nextElement;\n\n      $elements.each(function(i) {\n        if ($(this).is($element)) {\n          $prevElement = $elements.eq(i-1);\n          $nextElement = $elements.eq(i+1);\n          return;\n        }\n      });\n\n      var nextSibling = function() {\n        if (!$element.is(':last-child')) $nextElement.children('a:first').focus();\n      }, prevSibling = function() {\n        $prevElement.children('a:first').focus();\n      }, openSub = function() {\n        var $sub = $element.children('ul.is-dropdown-submenu');\n        if($sub.length){\n          _this._show($sub);\n          $element.find('li > a:first').focus();\n        }else{ return; }\n      }, closeSub = function() {\n        //if ($element.is(':first-child')) {\n        var close = $element.parent('ul').parent('li');\n          close.children('a:first').focus();\n          _this._hide(close);\n        //}\n      };\n      var functions = {\n        open: openSub,\n        close: function() {\n          _this._hide(_this.$element);\n          _this.$menuItems.find('a:first').focus(); // focus to first element\n        },\n        handled: function() {\n          e.preventDefault();\n          e.stopImmediatePropagation();\n        }\n      };\n\n      if (isTab) {\n        if (_this.vertical) { // vertical menu\n          if (_this.options.alignment === 'left') { // left aligned\n            $.extend(functions, {\n              down: nextSibling,\n              up: prevSibling,\n              next: openSub,\n              previous: closeSub\n            });\n          } else { // right aligned\n            $.extend(functions, {\n              down: nextSibling,\n              up: prevSibling,\n              next: closeSub,\n              previous: openSub\n            });\n          }\n        } else { // horizontal menu\n          $.extend(functions, {\n            next: nextSibling,\n            previous: prevSibling,\n            down: openSub,\n            up: closeSub\n          });\n        }\n      } else { // not tabs -> one sub\n        if (_this.options.alignment === 'left') { // left aligned\n          $.extend(functions, {\n            next: openSub,\n            previous: closeSub,\n            down: nextSibling,\n            up: prevSibling\n          });\n        } else { // right aligned\n          $.extend(functions, {\n            next: closeSub,\n            previous: openSub,\n            down: nextSibling,\n            up: prevSibling\n          });\n        }\n      }\n      Foundation.Keyboard.handleKey(e, 'DropdownMenu', functions);\n\n    });\n  };\n  /**\n   * Adds an event handler to the body to close any dropdowns on a click.\n   * @function\n   * @private\n   */\n  DropdownMenu.prototype._addBodyHandler = function(){\n    var $body = $(document.body),\n        _this = this;\n    $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu')\n         .on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu', function(e){\n           var $link = _this.$element.find(e.target);\n           if($link.length){ return; }\n\n           _this._hide();\n           $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');\n         });\n  };\n  /**\n   * Opens a dropdown pane, and checks for collisions first.\n   * @param {jQuery} $sub - ul element that is a submenu to show\n   * @function\n   * @private\n   * @fires DropdownMenu#show\n   */\n  DropdownMenu.prototype._show = function($sub){\n    var idx = this.$tabs.index(this.$tabs.filter(function(i, el){\n      return $(el).find($sub).length > 0;\n    }));\n    var $sibs = $sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');\n    this._hide($sibs, idx);\n    $sub.css('visibility', 'hidden').addClass('js-dropdown-active').attr({'aria-hidden': false})\n        .parent('li.is-dropdown-submenu-parent').addClass('is-active')\n        .attr({'aria-expanded': true});\n    var clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n    if(!clear){\n      var oldClass = this.options.alignment === 'left' ? '-right' : '-left',\n          $parentLi = $sub.parent('.is-dropdown-submenu-parent');\n      $parentLi.removeClass('opens' + oldClass).addClass('opens-' + this.options.alignment);\n      clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n      if(!clear){\n        $parentLi.removeClass('opens-' + this.options.alignment).addClass('opens-inner');\n      }\n      this.changed = true;\n    }\n    $sub.css('visibility', '');\n    if(this.options.closeOnClick){ this._addBodyHandler(); }\n    /**\n     * Fires when the new dropdown pane is visible.\n     * @event DropdownMenu#show\n     */\n    this.$element.trigger('show.zf.dropdownmenu', [$sub]);\n  };\n  /**\n   * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\n   * @function\n   * @param {jQuery} $elem - element with a submenu to hide\n   * @param {Number} idx - index of the $tabs collection to hide\n   * @private\n   */\n  DropdownMenu.prototype._hide = function($elem, idx){\n    var $toClose;\n    if($elem && $elem.length){\n      $toClose = $elem;\n    }else if(idx !== undefined){\n      $toClose = this.$tabs.not(function(i, el){\n        return i === idx;\n      });\n    }\n    else{\n      $toClose = this.$element;\n    }\n    var somethingToClose = $toClose.hasClass('is-active') || $toClose.find('.is-active').length > 0;\n\n    if(somethingToClose){\n      $toClose.find('li.is-active').add($toClose).attr({\n        'aria-expanded': false,\n        'data-is-click': false\n      }).removeClass('is-active');\n\n      $toClose.find('ul.js-dropdown-active').attr({\n        'aria-hidden': true\n      }).removeClass('js-dropdown-active');\n\n      if(this.changed || $toClose.find('opens-inner').length){\n        var oldClass = this.options.alignment === 'left' ? 'right' : 'left';\n        $toClose.find('li.is-dropdown-submenu-parent').add($toClose)\n                .removeClass('opens-inner opens-' + this.options.alignment)\n                .addClass('opens-' + oldClass);\n        this.changed = false;\n      }\n      /**\n       * Fires when the open menus are closed.\n       * @event DropdownMenu#hide\n       */\n      this.$element.trigger('hide.zf.dropdownmenu', [$toClose]);\n    }\n  };\n  /**\n   * Destroys the plugin.\n   * @function\n   */\n  DropdownMenu.prototype.destroy = function(){\n    this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click')\n        .removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');\n    $(document.body).off('.zf.dropdownmenu');\n    Foundation.Nest.Burn(this.$element, 'dropdown');\n    Foundation.unregisterPlugin(this);\n  };\n\n  Foundation.plugin(DropdownMenu, 'DropdownMenu');\n}(jQuery, window.Foundation);\n","/**\n * OffCanvas module.\n * @module foundation.offcanvas\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.triggers\n * @requires foundation.util.motion\n */\n!function($, Foundation) {\n\n'use strict';\n\n/**\n * Creates a new instance of an off-canvas wrapper.\n * @class\n * @fires OffCanvas#init\n * @param {Object} element - jQuery object to initialize.\n * @param {Object} options - Overrides to the default plugin settings.\n */\nfunction OffCanvas(element, options) {\n  this.$element = element;\n  this.options = $.extend({}, OffCanvas.defaults, this.$element.data(), options);\n  this.$lastTrigger = $();\n\n  this._init();\n  this._events();\n\n  Foundation.registerPlugin(this, 'OffCanvas');\n}\n\nOffCanvas.defaults = {\n  /**\n   * Allow the user to click outside of the menu to close it.\n   * @option\n   * @example true\n   */\n  closeOnClick: true,\n  /**\n   * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\n   * @option\n   * @example 500\n   */\n  transitionTime: 0,\n  /**\n   * Direction the offcanvas opens from. Determines class applied to body.\n   * @option\n   * @example left\n   */\n  position: 'left',\n  /**\n   * Force the page to scroll to top on open.\n   */\n  forceTop: true,\n  /**\n   * Allow the offcanvas to be sticky while open. Does nothing if Sass option `$maincontent-prevent-scroll === true`.\n   * Performance in Safari OSX/iOS is not great.\n   */\n  // isSticky: false,\n  /**\n   * Allow the offcanvas to remain open for certain breakpoints.\n   * @option\n   * @example false\n   */\n  isRevealed: false,\n  /**\n   * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class @`revealClass`.\n   * @option\n   * @example reveal-for-large\n   */\n  revealOn: null,\n  /**\n   * Force focus to the offcanvas on open. If true, will focus the opening trigger on close.\n   * @option\n   * @example true\n   */\n  autoFocus: true,\n  /**\n   * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\n   * @option\n   * TODO improve the regex testing for this.\n   * @example reveal-for-large\n   */\n  revealClass: 'reveal-for-',\n  /**\n   * Triggers optional focus trapping when opening an offcanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\n   * @option\n   * @example true\n   */\n  trapFocus: false\n};\n\n/**\n * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\n * @function\n * @private\n */\nOffCanvas.prototype._init = function() {\n  var id = this.$element.attr('id');\n\n  this.$element.attr('aria-hidden', 'true');\n\n  // Find triggers that affect this element and add aria-expanded to them\n  $(document)\n    .find('[data-open=\"'+id+'\"], [data-close=\"'+id+'\"], [data-toggle=\"'+id+'\"]')\n    .attr('aria-expanded', 'false')\n    .attr('aria-controls', id);\n\n  // Add a close trigger over the body if necessary\n  if (this.options.closeOnClick){\n    if($('.js-off-canvas-exit').length){\n      this.$exiter = $('.js-off-canvas-exit');\n    }else{\n      var exiter = document.createElement('div');\n      exiter.setAttribute('class', 'js-off-canvas-exit');\n      $('[data-off-canvas-content]').append(exiter);\n\n      this.$exiter = $(exiter);\n    }\n  }\n\n  this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, 'g').test(this.$element[0].className);\n\n  if(this.options.isRevealed){\n    this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];\n    this._setMQChecker();\n  }\n  if(!this.options.transitionTime){\n    this.options.transitionTime = parseFloat(window.getComputedStyle($('[data-off-canvas-wrapper]')[0]).transitionDuration) * 1000;\n  }\n};\n\n/**\n * Adds event handlers to the off-canvas wrapper and the exit overlay.\n * @function\n * @private\n */\nOffCanvas.prototype._events = function() {\n  this.$element.off('.zf.trigger .zf.offcanvas').on({\n    'open.zf.trigger': this.open.bind(this),\n    'close.zf.trigger': this.close.bind(this),\n    'toggle.zf.trigger': this.toggle.bind(this),\n    'keydown.zf.offcanvas': this._handleKeyboard.bind(this)\n  });\n\n  if (this.options.closeOnClick && this.$exiter.length) {\n    this.$exiter.on({'click.zf.offcanvas': this.close.bind(this)});\n  }\n};\n/**\n * Applies event listener for elements that will reveal at certain breakpoints.\n * @private\n */\nOffCanvas.prototype._setMQChecker = function(){\n  var _this = this;\n\n  $(window).on('changed.zf.mediaquery', function(){\n    if(Foundation.MediaQuery.atLeast(_this.options.revealOn)){\n      _this.reveal(true);\n    }else{\n      _this.reveal(false);\n    }\n  }).one('load.zf.offcanvas', function(){\n    if(Foundation.MediaQuery.atLeast(_this.options.revealOn)){\n      _this.reveal(true);\n    }\n  });\n};\n/**\n * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\n * @param {Boolean} isRevealed - true if element should be revealed.\n * @function\n */\nOffCanvas.prototype.reveal = function(isRevealed){\n  var $closer = this.$element.find('[data-close]');\n  if(isRevealed){\n    this.close();\n    this.isRevealed = true;\n    // if(!this.options.forceTop){\n    //   var scrollPos = parseInt(window.pageYOffset);\n    //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n    // }\n    // if(this.options.isSticky){ this._stick(); }\n    this.$element.off('open.zf.trigger toggle.zf.trigger');\n    if($closer.length){ $closer.hide(); }\n  }else{\n    this.isRevealed = false;\n    // if(this.options.isSticky || !this.options.forceTop){\n    //   this.$element[0].style.transform = '';\n    //   $(window).off('scroll.zf.offcanvas');\n    // }\n    this.$element.on({\n      'open.zf.trigger': this.open.bind(this),\n      'toggle.zf.trigger': this.toggle.bind(this)\n    });\n    if($closer.length){\n      $closer.show();\n    }\n  }\n};\n\n/**\n * Opens the off-canvas menu.\n * @function\n * @param {Object} event - Event object passed from listener.\n * @param {jQuery} trigger - element that triggered the off-canvas to open.\n * @fires OffCanvas#opened\n */\nOffCanvas.prototype.open = function(event, trigger) {\n  if (this.$element.hasClass('is-open') || this.isRevealed){ return; }\n  var _this = this,\n      $body = $(document.body);\n  $('body').scrollTop(0);\n  // window.pageYOffset = 0;\n\n  // if(!this.options.forceTop){\n  //   var scrollPos = parseInt(window.pageYOffset);\n  //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n  //   if(this.$exiter.length){\n  //     this.$exiter[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n  //   }\n  // }\n  /**\n   * Fires when the off-canvas menu opens.\n   * @event OffCanvas#opened\n   */\n  Foundation.Move(this.options.transitionTime, this.$element, function(){\n    $('[data-off-canvas-wrapper]').addClass('is-off-canvas-open is-open-'+ _this.options.position);\n\n    _this.$element\n      .addClass('is-open')\n\n    // if(_this.options.isSticky){\n    //   _this._stick();\n    // }\n  });\n  this.$element.attr('aria-hidden', 'false')\n      .trigger('opened.zf.offcanvas');\n\n  if(this.options.closeOnClick){\n    this.$exiter.addClass('is-visible');\n  }\n  if(trigger){\n    this.$lastTrigger = trigger.attr('aria-expanded', 'true');\n  }\n  if(this.options.autoFocus){\n    this.$element.one('finished.zf.animate', function(){\n      _this.$element.find('a, button').eq(0).focus();\n    });\n  }\n  if(this.options.trapFocus){\n    $('[data-off-canvas-content]').attr('tabindex', '-1');\n    this._trapFocus();\n  }\n};\n/**\n * Traps focus within the offcanvas on open.\n * @private\n */\nOffCanvas.prototype._trapFocus = function(){\n  var focusable = Foundation.Keyboard.findFocusable(this.$element),\n      first = focusable.eq(0),\n      last = focusable.eq(-1);\n\n  focusable.off('.zf.offcanvas').on('keydown.zf.offcanvas', function(e){\n    if(e.which === 9 || e.keycode === 9){\n      if(e.target === last[0] && !e.shiftKey){\n        e.preventDefault();\n        first.focus();\n      }\n      if(e.target === first[0] && e.shiftKey){\n        e.preventDefault();\n        last.focus();\n      }\n    }\n  });\n};\n/**\n * Allows the offcanvas to appear sticky utilizing translate properties.\n * @private\n */\n// OffCanvas.prototype._stick = function(){\n//   var elStyle = this.$element[0].style;\n//\n//   if(this.options.closeOnClick){\n//     var exitStyle = this.$exiter[0].style;\n//   }\n//\n//   $(window).on('scroll.zf.offcanvas', function(e){\n//     console.log(e);\n//     var pageY = window.pageYOffset;\n//     elStyle.transform = 'translate(0,' + pageY + 'px)';\n//     if(exitStyle !== undefined){ exitStyle.transform = 'translate(0,' + pageY + 'px)'; }\n//   });\n//   // this.$element.trigger('stuck.zf.offcanvas');\n// };\n/**\n * Closes the off-canvas menu.\n * @function\n * @param {Function} cb - optional cb to fire after closure.\n * @fires OffCanvas#closed\n */\nOffCanvas.prototype.close = function(cb) {\n  if(!this.$element.hasClass('is-open') || this.isRevealed){ return; }\n\n  var _this = this;\n\n  //  Foundation.Move(this.options.transitionTime, this.$element, function(){\n  $('[data-off-canvas-wrapper]').removeClass('is-off-canvas-open is-open-' + _this.options.position);\n  _this.$element.removeClass('is-open');\n    // Foundation._reflow();\n  // });\n  this.$element.attr('aria-hidden', 'true')\n    /**\n     * Fires when the off-canvas menu opens.\n     * @event OffCanvas#closed\n     */\n      .trigger('closed.zf.offcanvas');\n  // if(_this.options.isSticky || !_this.options.forceTop){\n  //   setTimeout(function(){\n  //     _this.$element[0].style.transform = '';\n  //     $(window).off('scroll.zf.offcanvas');\n  //   }, this.options.transitionTime);\n  // }\n  if(this.options.closeOnClick){\n    this.$exiter.removeClass('is-visible');\n  }\n\n  this.$lastTrigger.attr('aria-expanded', 'false');\n  if(this.options.trapFocus){\n    $('[data-off-canvas-content]').removeAttr('tabindex');\n  }\n\n};\n\n/**\n * Toggles the off-canvas menu open or closed.\n * @function\n * @param {Object} event - Event object passed from listener.\n * @param {jQuery} trigger - element that triggered the off-canvas to open.\n */\nOffCanvas.prototype.toggle = function(event, trigger) {\n  if (this.$element.hasClass('is-open')) {\n    this.close(event, trigger);\n  }\n  else {\n    this.open(event, trigger);\n  }\n};\n\n/**\n * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\n * @function\n * @private\n */\nOffCanvas.prototype._handleKeyboard = function(event) {\n  if (event.which !== 27) return;\n\n  event.stopPropagation();\n  event.preventDefault();\n  this.close();\n  this.$lastTrigger.focus();\n};\n/**\n * Destroys the offcanvas plugin.\n * @function\n */\nOffCanvas.prototype.destroy = function(){\n  this.close();\n  this.$element.off('.zf.trigger .zf.offcanvas');\n  this.$exiter.off('.zf.offcanvas');\n\n  Foundation.unregisterPlugin(this);\n};\n\nFoundation.plugin(OffCanvas, 'OffCanvas');\n\n}(jQuery, Foundation);\n","/**\n * Reveal module.\n * @module foundation.reveal\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.motion if using animations\n */\n!function(Foundation, $) {\n  'use strict';\n\n  /**\n   * Creates a new instance of Reveal.\n   * @class\n   * @param {jQuery} element - jQuery object to use for the modal.\n   * @param {Object} options - optional parameters.\n   */\n\n  function Reveal(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n    this._init();\n\n    Foundation.registerPlugin(this, 'Reveal');\n    Foundation.Keyboard.register('Reveal', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ESCAPE': 'close',\n      'TAB': 'tab_forward',\n      'SHIFT_TAB': 'tab_backward'\n    });\n  }\n\n  Reveal.defaults = {\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-in-left'\n     */\n    animationIn: '',\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-out-right'\n     */\n    animationOut: '',\n    /**\n     * Time, in ms, to delay the opening of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    showDelay: 0,\n    /**\n     * Time, in ms, to delay the closing of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    hideDelay: 0,\n    /**\n     * Allows a click on the body/overlay to close the modal.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Allows the modal to close if the user presses the `ESCAPE` key.\n     * @option\n     * @example true\n     */\n    closeOnEsc: true,\n    /**\n     * If true, allows multiple modals to be displayed at once.\n     * @option\n     * @example false\n     */\n    multipleOpened: false,\n    /**\n     * Distance, in pixels, the modal should push down from the top of the screen.\n     * @option\n     * @example 100\n     */\n    vOffset: 100,\n    /**\n     * Distance, in pixels, the modal should push in from the side of the screen.\n     * @option\n     * @example 0\n     */\n    hOffset: 0,\n    /**\n     * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\n     * @option\n     * @example false\n     */\n    fullScreen: false,\n    /**\n     * Percentage of screen height the modal should push up from the bottom of the view.\n     * @option\n     * @example 10\n     */\n    btmOffsetPct: 10,\n    /**\n     * Allows the modal to generate an overlay div, which will cover the view when modal opens.\n     * @option\n     * @example true\n     */\n    overlay: true,\n    /**\n     * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\n     * @option\n     * @example false\n     */\n    resetOnClose: false,\n    /**\n     * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\n     * @option\n     * @example false\n     */\n    deepLink: false\n  };\n\n  /**\n   * Initializes the modal by adding the overlay and close buttons, (if selected).\n   * @private\n   */\n  Reveal.prototype._init = function(){\n    this.id = this.$element.attr('id');\n    this.isActive = false;\n\n    this.$anchor = $('[data-open=\"' + this.id + '\"]').length ? $('[data-open=\"' + this.id + '\"]') : $('[data-toggle=\"' + this.id + '\"]');\n\n    if(this.$anchor.length){\n      var anchorId = this.$anchor[0].id || Foundation.GetYoDigits(6, 'reveal');\n\n      this.$anchor.attr({\n        'aria-controls': this.id,\n        'id': anchorId,\n        'aria-haspopup': true,\n        'tabindex': 0\n      });\n      this.$element.attr({'aria-labelledby': anchorId});\n    }\n\n    // this.options.fullScreen = this.$element.hasClass('full');\n    if(this.options.fullScreen || this.$element.hasClass('full')){\n      this.options.fullScreen = true;\n      this.options.overlay = false;\n    }\n    if(this.options.overlay && !this.$overlay){\n      this.$overlay = this._makeOverlay(this.id);\n    }\n\n    this.$element.attr({\n        'role': 'dialog',\n        'aria-hidden': true,\n        'data-yeti-box': this.id,\n        'data-resize': this.id\n    });\n\n    this._events();\n    if(this.options.deepLink && window.location.hash === ( '#' + this.id)){\n      $(window).one('load.zf.reveal', this.open.bind(this));\n    }\n  };\n\n  /**\n   * Creates an overlay div to display behind the modal.\n   * @private\n   */\n  Reveal.prototype._makeOverlay = function(id){\n    var $overlay = $('<div></div>')\n                    .addClass('reveal-overlay')\n                    .attr({'tabindex': -1, 'aria-hidden': true})\n                    .appendTo('body');\n    if(this.options.closeOnClick){\n      $overlay.attr({\n        'data-close': id\n      });\n    }\n    return $overlay;\n  };\n\n  /**\n   * Adds event handlers for the modal.\n   * @private\n   */\n  Reveal.prototype._events = function(){\n    var _this = this;\n\n    this.$element.on({\n      'open.zf.trigger': this.open.bind(this),\n      'close.zf.trigger': this.close.bind(this),\n      'toggle.zf.trigger': this.toggle.bind(this),\n      'resizeme.zf.trigger': function(){\n        if(_this.$element.is(':visible')){\n          _this._setPosition(function(){});\n        }\n      }\n    });\n\n    if(this.$anchor.length){\n      this.$anchor.on('keydown.zf.reveal', function(e){\n        if(e.which === 13 || e.which === 32){\n          e.stopPropagation();\n          e.preventDefault();\n          _this.open();\n        }\n      });\n    }\n\n\n    if(this.options.closeOnClick && this.options.overlay){\n      this.$overlay.off('.zf.reveal').on('click.zf.reveal', this.close.bind(this));\n    }\n    if(this.options.deepLink){\n      $(window).on('popstate.zf.reveal:' + this.id, this._handleState.bind(this));\n    }\n  };\n  /**\n   * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\n   * @private\n   */\n  Reveal.prototype._handleState = function(e){\n    if(window.location.hash === ( '#' + this.id) && !this.isActive){ this.open(); }\n    else{ this.close(); }\n  };\n  /**\n   * Sets the position of the modal before opening\n   * @param {Function} cb - a callback function to execute when positioning is complete.\n   * @private\n   */\n  Reveal.prototype._setPosition = function(cb){\n    var eleDims = Foundation.Box.GetDimensions(this.$element);\n    var elePos = this.options.fullScreen ? 'reveal full' : (eleDims.height >= (0.5 * eleDims.windowDims.height)) ? 'reveal' : 'center';\n\n    if(elePos === 'reveal full'){\n      //set to full height/width\n      this.$element\n          .offset(Foundation.Box.GetOffsets(this.$element, null, elePos, this.options.vOffset))\n          .css({\n            'height': eleDims.windowDims.height,\n            'width': eleDims.windowDims.width\n          });\n    }else if(!Foundation.MediaQuery.atLeast('medium') || !Foundation.Box.ImNotTouchingYou(this.$element, null, true, false)){\n      //if smaller than medium, resize to 100% width minus any custom L/R margin\n      this.$element\n          .css({\n            'width': eleDims.windowDims.width - (this.options.hOffset * 2)\n          })\n          .offset(Foundation.Box.GetOffsets(this.$element, null, 'center', this.options.vOffset, this.options.hOffset));\n      //flag a boolean so we can reset the size after the element is closed.\n      this.changedSize = true;\n    }else{\n      this.$element\n          .css({\n            'max-height': eleDims.windowDims.height - (this.options.vOffset * (this.options.btmOffsetPct / 100 + 1)),\n            'width': ''\n          })\n          .offset(Foundation.Box.GetOffsets(this.$element, null, elePos, this.options.vOffset));\n          //the max height based on a percentage of vertical offset plus vertical offset\n    }\n\n    cb();\n  };\n\n  /**\n   * Opens the modal controlled by `this.$anchor`, and closes all others by default.\n   * @function\n   * @fires Reveal#closeme\n   * @fires Reveal#open\n   */\n  Reveal.prototype.open = function(){\n    if(this.options.deepLink){\n      var hash = '#' + this.id;\n\n      if(window.history.pushState){\n        window.history.pushState(null, null, hash);\n      }else{\n        window.location.hash = hash;\n      }\n    }\n\n    var _this = this;\n    this.isActive = true;\n    //make element invisible, but remove display: none so we can get size and positioning\n    this.$element\n        .css({'visibility': 'hidden'})\n        .show()\n        .scrollTop(0);\n\n    this._setPosition(function(){\n      _this.$element.hide()\n                   .css({'visibility': ''});\n      if(!_this.options.multipleOpened){\n        /**\n         * Fires immediately before the modal opens.\n         * Closes any other modals that are currently open\n         * @event Reveal#closeme\n         */\n        _this.$element.trigger('closeme.zf.reveal', _this.id);\n      }\n      if(_this.options.animationIn){\n        if(_this.options.overlay){\n          Foundation.Motion.animateIn(_this.$overlay, 'fade-in', function(){\n            Foundation.Motion.animateIn(_this.$element, _this.options.animationIn, function(){\n              _this.focusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n            });\n          });\n        }else{\n          Foundation.Motion.animateIn(_this.$element, _this.options.animationIn, function(){\n            _this.focusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n          });\n        }\n      }else{\n        if(_this.options.overlay){\n          _this.$overlay.show(0, function(){\n            _this.$element.show(_this.options.showDelay, function(){\n            });\n          });\n        }else{\n          _this.$element.show(_this.options.showDelay, function(){\n          });\n        }\n      }\n    });\n\n\n    // handle accessibility\n    this.$element.attr({'aria-hidden': false}).attr('tabindex', -1).focus()\n    /**\n     * Fires when the modal has successfully opened.\n     * @event Reveal#open\n     */\n                 .trigger('open.zf.reveal');\n\n    $('body').addClass('is-reveal-open')\n             .attr({'aria-hidden': (this.options.overlay || this.options.fullScreen) ? true : false});\n    setTimeout(function(){\n      _this._extraHandlers();\n    }, 0);\n  };\n\n  /**\n   * Adds extra event handlers for the body and window if necessary.\n   * @private\n   */\n  Reveal.prototype._extraHandlers = function(){\n    var _this = this;\n    this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n\n    if(!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen){\n      $('body').on('click.zf.reveal', function(e){\n        if(e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)){ return; }\n        _this.close();\n      });\n    }\n    if(this.options.closeOnEsc){\n      $(window).on('keydown.zf.reveal', function(e){\n        Foundation.Keyboard.handleKey(e, 'Reveal', {\n          close: function() {\n            if (_this.options.closeOnEsc) {\n              _this.close();\n              _this.$anchor.focus();\n            }\n          }\n        });\n        if (_this.focusableElements.length === 0) { // no focusable elements inside the modal at all, prevent tabbing in general\n          e.preventDefault();\n        }\n      });\n    }\n\n    // lock focus within modal while tabbing\n    this.$element.on('keydown.zf.reveal', function(e) {\n      var $target = $(this);\n      // handle keyboard event with keyboard util\n      Foundation.Keyboard.handleKey(e, 'Reveal', {\n        tab_forward: function() {\n          if (_this.$element.find(':focus').is(_this.focusableElements.eq(-1))) { // left modal downwards, setting focus to first element\n            _this.focusableElements.eq(0).focus();\n            e.preventDefault();\n          }\n        },\n        tab_backward: function() {\n          if (_this.$element.find(':focus').is(_this.focusableElements.eq(0)) || _this.$element.is(':focus')) { // left modal upwards, setting focus to last element\n            _this.focusableElements.eq(-1).focus();\n            e.preventDefault();\n          }\n        },\n        open: function() {\n          if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\n            setTimeout(function() { // set focus back to anchor if close button has been activated\n              _this.$anchor.focus();\n            }, 1);\n          } else if ($target.is(_this.focusableElements)) { // dont't trigger if acual element has focus (i.e. inputs, links, ...)\n            _this.open();\n          }\n        },\n        close: function() {\n          if (_this.options.closeOnEsc) {\n            _this.close();\n            _this.$anchor.focus();\n          }\n        }\n      });\n    });\n\n  };\n\n  /**\n   * Closes the modal.\n   * @function\n   * @fires Reveal#closed\n   */\n  Reveal.prototype.close = function(){\n    if(!this.isActive || !this.$element.is(':visible')){\n      return false;\n    }\n    var _this = this;\n\n    if(this.options.animationOut){\n      Foundation.Motion.animateOut(this.$element, this.options.animationOut, function(){\n        if(_this.options.overlay){\n          Foundation.Motion.animateOut(_this.$overlay, 'fade-out', finishUp);\n        }else{ finishUp(); }\n      });\n    }else{\n      this.$element.hide(_this.options.hideDelay, function(){\n        if(_this.options.overlay){\n          _this.$overlay.hide(0, finishUp);\n        }else{ finishUp(); }\n      });\n    }\n    //conditionals to remove extra event listeners added on open\n    if(this.options.closeOnEsc){\n      $(window).off('keydown.zf.reveal');\n    }\n    if(!this.options.overlay && this.options.closeOnClick){\n      $('body').off('click.zf.reveal');\n    }\n    this.$element.off('keydown.zf.reveal');\n    function finishUp(){\n      //if the modal changed size, reset it\n      if(_this.changedSize){\n        _this.$element.css({\n          'height': '',\n          'width': ''\n        });\n      }\n      $('body').removeClass('is-reveal-open').attr({'aria-hidden': false, 'tabindex': ''});\n      _this.$element.attr({'aria-hidden': true})\n      /**\n      * Fires when the modal is done closing.\n      * @event Reveal#closed\n      */\n      .trigger('closed.zf.reveal');\n    }\n\n\n    /**\n    * Resets the modal content\n    * This prevents a running video to keep going in the background\n    */\n    if(this.options.resetOnClose) {\n      this.$element.html(this.$element.html());\n    }\n\n    this.isActive = false;\n     if(_this.options.deepLink){\n       if(window.history.replaceState){\n         window.history.replaceState(\"\", document.title, window.location.pathname);\n       }else{\n         window.location.hash = '';\n       }\n     }\n  };\n  /**\n   * Toggles the open/closed state of a modal.\n   * @function\n   */\n  Reveal.prototype.toggle = function(){\n    if(this.isActive){\n      this.close();\n    }else{\n      this.open();\n    }\n  };\n\n  /**\n   * Destroys an instance of a modal.\n   * @function\n   */\n  Reveal.prototype.destroy = function() {\n    if(this.options.overlay){\n      this.$overlay.hide().off().remove();\n    }\n    this.$element.hide().off();\n    this.$anchor.off('.zf');\n    $(window).off('.zf.reveal:' + this.id);\n\n    Foundation.unregisterPlugin(this);\n  };\n\n  Foundation.plugin(Reveal, 'Reveal');\n\n  // Exports for AMD/Browserify\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined')\n    module.exports = Reveal;\n  if (typeof define === 'function')\n    define(['foundation'], function() {\n      return Reveal;\n    });\n\n}(Foundation, jQuery);\n","jQuery( function( $ ) {\n    \n    $( document ).foundation(); \n    \n} );","jQuery( document ).ready( function( $ ) {\n\n    $( '.realbig-slider' ).each( function( index ) {\n\n        $( this ).addClass( 'slider-' + index );\n\n    } );\n\n    $( '.realbig-slider.default' ).each( function() {\n        // Uses default settings. Set default_js = false in the shortcode to provide a custom instantiation\n\n        $( this ).RealBigSlider();\n\n    } );\n    \n    $( '#home-slider .realbig-slider' ).RealBigSlider( {\n        slideDuration: '7000',\n        speed: 500,\n        arrowRight: '#home-slider .realbig-slider .arrow-right',\n        arrowLeft: '#home-slider .realbig-slider .arrow-left',\n    } );\n\n} );","jQuery( function( $ ) {\n    \n    if ( $( '#wasentha_testimonial-shortcode' ).length > 0 ) {\n        \n        $.ajax( {\n\t\t\t\n            type : 'POST',\n            url : wasentha_theme_data.ajaxUrl,  \n            data : {\n\n                testimonial_category: $( '#wasentha_testimonial-shortcode' ).data( 'category' ),\n                action: 'get_testimonial' // The name of the action hook. It uses the function named \"get_wasentha_testimonial_callback\"\n\n            },\n\n            success: function( response ) {\n\n                var options = jQuery.parseJSON( response ); // Parses JSON from the AJAX response\n                \n                options = options[ Math.floor( Math.random() * options.length ) ]; // Choose One at Random\n\n                if ( options.name !== '' && options.body !== '' ) {\n\n                    $( '#wasentha_testimonial-shortcode .author span' ).html( options.name );\n                    $( '#wasentha_testimonial-shortcode .testimonials-text' ).html( options.body );\n                    \n                    $( '#wasentha_testimonial-shortcode .testimonial-loading' ).hide();\n                    $( '#wasentha_testimonial-shortcode .testimonials-content' ).show();\n\n                }\n\n            }\n\n        } );\n    \n    }\n    \n} );"]}